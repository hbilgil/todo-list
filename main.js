(()=>{var e={176:function(e){e.exports=function(){"use strict";const e="SweetAlert2:",t=e=>e.charAt(0).toUpperCase()+e.slice(1),n=e=>Array.prototype.slice.call(e),o=t=>{console.warn("".concat(e," ").concat("object"==typeof t?t.join(" "):t))},a=t=>{console.error("".concat(e," ").concat(t))},i=[],s=(e,t)=>{var n;n='"'.concat(e,'" is deprecated and will be removed in the next major release. Please use "').concat(t,'" instead.'),i.includes(n)||(i.push(n),o(n))},r=e=>"function"==typeof e?e():e,l=e=>e&&"function"==typeof e.toPromise,c=e=>l(e)?e.toPromise():Promise.resolve(e),d=e=>e&&Promise.resolve(e)===e,A={title:"",titleText:"",text:"",html:"",footer:"",icon:void 0,iconColor:void 0,iconHtml:void 0,template:void 0,toast:!1,showClass:{popup:"swal2-show",backdrop:"swal2-backdrop-show",icon:"swal2-icon-show"},hideClass:{popup:"swal2-hide",backdrop:"swal2-backdrop-hide",icon:"swal2-icon-hide"},customClass:{},target:"body",color:void 0,backdrop:!0,heightAuto:!0,allowOutsideClick:!0,allowEscapeKey:!0,allowEnterKey:!0,stopKeydownPropagation:!0,keydownListenerCapture:!1,showConfirmButton:!0,showDenyButton:!1,showCancelButton:!1,preConfirm:void 0,preDeny:void 0,confirmButtonText:"OK",confirmButtonAriaLabel:"",confirmButtonColor:void 0,denyButtonText:"No",denyButtonAriaLabel:"",denyButtonColor:void 0,cancelButtonText:"Cancel",cancelButtonAriaLabel:"",cancelButtonColor:void 0,buttonsStyling:!0,reverseButtons:!1,focusConfirm:!0,focusDeny:!1,focusCancel:!1,returnFocus:!0,showCloseButton:!1,closeButtonHtml:"&times;",closeButtonAriaLabel:"Close this dialog",loaderHtml:"",showLoaderOnConfirm:!1,showLoaderOnDeny:!1,imageUrl:void 0,imageWidth:void 0,imageHeight:void 0,imageAlt:"",timer:void 0,timerProgressBar:!1,width:void 0,padding:void 0,background:void 0,input:void 0,inputPlaceholder:"",inputLabel:"",inputValue:"",inputOptions:{},inputAutoTrim:!0,inputAttributes:{},inputValidator:void 0,returnInputValueOnDeny:!1,validationMessage:void 0,grow:!1,position:"center",progressSteps:[],currentProgressStep:void 0,progressStepsDistance:void 0,willOpen:void 0,didOpen:void 0,didRender:void 0,willClose:void 0,didClose:void 0,didDestroy:void 0,scrollbarPadding:!0},p=["allowEscapeKey","allowOutsideClick","background","buttonsStyling","cancelButtonAriaLabel","cancelButtonColor","cancelButtonText","closeButtonAriaLabel","closeButtonHtml","color","confirmButtonAriaLabel","confirmButtonColor","confirmButtonText","currentProgressStep","customClass","denyButtonAriaLabel","denyButtonColor","denyButtonText","didClose","didDestroy","footer","hideClass","html","icon","iconColor","iconHtml","imageAlt","imageHeight","imageUrl","imageWidth","preConfirm","preDeny","progressSteps","returnFocus","reverseButtons","showCancelButton","showCloseButton","showConfirmButton","showDenyButton","text","title","titleText","willClose"],u={},m=["allowOutsideClick","allowEnterKey","backdrop","focusConfirm","focusDeny","focusCancel","returnFocus","heightAuto","keydownListenerCapture"],f=e=>Object.prototype.hasOwnProperty.call(A,e),g=e=>-1!==p.indexOf(e),h=e=>u[e],w=e=>{f(e)||o('Unknown parameter "'.concat(e,'"'))},b=e=>{m.includes(e)&&o('The parameter "'.concat(e,'" is incompatible with toasts'))},B=e=>{h(e)&&s(e,h(e))},C=e=>{const t={};for(const n in e)t[e[n]]="swal2-"+e[n];return t},y=C(["container","shown","height-auto","iosfix","popup","modal","no-backdrop","no-transition","toast","toast-shown","show","hide","close","title","html-container","actions","confirm","deny","cancel","default-outline","footer","icon","icon-content","image","input","file","range","select","radio","checkbox","label","textarea","inputerror","input-label","validation-message","progress-steps","active-progress-step","progress-step","progress-step-line","loader","loading","styled","top","top-start","top-end","top-left","top-right","center","center-start","center-end","center-left","center-right","bottom","bottom-start","bottom-end","bottom-left","bottom-right","grow-row","grow-column","grow-fullscreen","rtl","timer-progress-bar","timer-progress-bar-container","scrollbar-measure","icon-success","icon-warning","icon-info","icon-question","icon-error","no-war"]),x=C(["success","warning","info","question","error"]),I=()=>document.body.querySelector(".".concat(y.container)),k=e=>{const t=I();return t?t.querySelector(e):null},v=e=>k(".".concat(e)),E=()=>v(y.popup),S=()=>v(y.icon),j=()=>v(y.title),T=()=>v(y["html-container"]),z=()=>v(y.image),q=()=>v(y["progress-steps"]),L=()=>v(y["validation-message"]),P=()=>k(".".concat(y.actions," .").concat(y.confirm)),Y=()=>k(".".concat(y.actions," .").concat(y.deny)),D=()=>k(".".concat(y.loader)),O=()=>k(".".concat(y.actions," .").concat(y.cancel)),M=()=>v(y.actions),W=()=>v(y.footer),F=()=>v(y["timer-progress-bar"]),U=()=>v(y.close),H=()=>{const e=n(E().querySelectorAll('[tabindex]:not([tabindex="-1"]):not([tabindex="0"])')).sort(((e,t)=>{const n=parseInt(e.getAttribute("tabindex")),o=parseInt(t.getAttribute("tabindex"));return n>o?1:n<o?-1:0})),t=n(E().querySelectorAll('\n  a[href],\n  area[href],\n  input:not([disabled]),\n  select:not([disabled]),\n  textarea:not([disabled]),\n  button:not([disabled]),\n  iframe,\n  object,\n  embed,\n  [tabindex="0"],\n  [contenteditable],\n  audio[controls],\n  video[controls],\n  summary\n')).filter((e=>"-1"!==e.getAttribute("tabindex")));return(e=>{const t=[];for(let n=0;n<e.length;n++)-1===t.indexOf(e[n])&&t.push(e[n]);return t})(e.concat(t)).filter((e=>se(e)))},V=()=>X(document.body,y.shown)&&!X(document.body,y["toast-shown"])&&!X(document.body,y["no-backdrop"]),N=()=>E()&&X(E(),y.toast),Z={previousBodyPadding:null},R=(e,t)=>{if(e.textContent="",t){const o=(new DOMParser).parseFromString(t,"text/html");n(o.querySelector("head").childNodes).forEach((t=>{e.appendChild(t)})),n(o.querySelector("body").childNodes).forEach((t=>{e.appendChild(t)}))}},X=(e,t)=>{if(!t)return!1;const n=t.split(/\s+/);for(let t=0;t<n.length;t++)if(!e.classList.contains(n[t]))return!1;return!0},G=(e,t,a)=>{if(((e,t)=>{n(e.classList).forEach((n=>{Object.values(y).includes(n)||Object.values(x).includes(n)||Object.values(t.showClass).includes(n)||e.classList.remove(n)}))})(e,t),t.customClass&&t.customClass[a]){if("string"!=typeof t.customClass[a]&&!t.customClass[a].forEach)return o("Invalid type of customClass.".concat(a,'! Expected string or iterable object, got "').concat(typeof t.customClass[a],'"'));K(e,t.customClass[a])}},Q=(e,t)=>{if(!t)return null;switch(t){case"select":case"textarea":case"file":return e.querySelector(".".concat(y.popup," > .").concat(y[t]));case"checkbox":return e.querySelector(".".concat(y.popup," > .").concat(y.checkbox," input"));case"radio":return e.querySelector(".".concat(y.popup," > .").concat(y.radio," input:checked"))||e.querySelector(".".concat(y.popup," > .").concat(y.radio," input:first-child"));case"range":return e.querySelector(".".concat(y.popup," > .").concat(y.range," input"));default:return e.querySelector(".".concat(y.popup," > .").concat(y.input))}},$=e=>{if(e.focus(),"file"!==e.type){const t=e.value;e.value="",e.value=t}},_=(e,t,n)=>{e&&t&&("string"==typeof t&&(t=t.split(/\s+/).filter(Boolean)),t.forEach((t=>{Array.isArray(e)?e.forEach((e=>{n?e.classList.add(t):e.classList.remove(t)})):n?e.classList.add(t):e.classList.remove(t)})))},K=(e,t)=>{_(e,t,!0)},J=(e,t)=>{_(e,t,!1)},ee=(e,t)=>{const o=n(e.childNodes);for(let e=0;e<o.length;e++)if(X(o[e],t))return o[e]},te=(e,t,n)=>{n==="".concat(parseInt(n))&&(n=parseInt(n)),n||0===parseInt(n)?e.style[t]="number"==typeof n?"".concat(n,"px"):n:e.style.removeProperty(t)},ne=function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"flex";e.style.display=t},oe=e=>{e.style.display="none"},ae=(e,t,n,o)=>{const a=e.querySelector(t);a&&(a.style[n]=o)},ie=function(e,t){t?ne(e,arguments.length>2&&void 0!==arguments[2]?arguments[2]:"flex"):oe(e)},se=e=>!(!e||!(e.offsetWidth||e.offsetHeight||e.getClientRects().length)),re=e=>!!(e.scrollHeight>e.clientHeight),le=e=>{const t=window.getComputedStyle(e),n=parseFloat(t.getPropertyValue("animation-duration")||"0"),o=parseFloat(t.getPropertyValue("transition-duration")||"0");return n>0||o>0},ce=function(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];const n=F();se(n)&&(t&&(n.style.transition="none",n.style.width="100%"),setTimeout((()=>{n.style.transition="width ".concat(e/1e3,"s linear"),n.style.width="0%"}),10))},de=()=>"undefined"==typeof window||"undefined"==typeof document,Ae={},pe=e=>new Promise((t=>{if(!e)return t();const n=window.scrollX,o=window.scrollY;Ae.restoreFocusTimeout=setTimeout((()=>{Ae.previousActiveElement instanceof HTMLElement?(Ae.previousActiveElement.focus(),Ae.previousActiveElement=null):document.body&&document.body.focus(),t()}),100),window.scrollTo(n,o)})),ue='\n <div aria-labelledby="'.concat(y.title,'" aria-describedby="').concat(y["html-container"],'" class="').concat(y.popup,'" tabindex="-1">\n   <button type="button" class="').concat(y.close,'"></button>\n   <ul class="').concat(y["progress-steps"],'"></ul>\n   <div class="').concat(y.icon,'"></div>\n   <img class="').concat(y.image,'" />\n   <h2 class="').concat(y.title,'" id="').concat(y.title,'"></h2>\n   <div class="').concat(y["html-container"],'" id="').concat(y["html-container"],'"></div>\n   <input class="').concat(y.input,'" />\n   <input type="file" class="').concat(y.file,'" />\n   <div class="').concat(y.range,'">\n     <input type="range" />\n     <output></output>\n   </div>\n   <select class="').concat(y.select,'"></select>\n   <div class="').concat(y.radio,'"></div>\n   <label for="').concat(y.checkbox,'" class="').concat(y.checkbox,'">\n     <input type="checkbox" />\n     <span class="').concat(y.label,'"></span>\n   </label>\n   <textarea class="').concat(y.textarea,'"></textarea>\n   <div class="').concat(y["validation-message"],'" id="').concat(y["validation-message"],'"></div>\n   <div class="').concat(y.actions,'">\n     <div class="').concat(y.loader,'"></div>\n     <button type="button" class="').concat(y.confirm,'"></button>\n     <button type="button" class="').concat(y.deny,'"></button>\n     <button type="button" class="').concat(y.cancel,'"></button>\n   </div>\n   <div class="').concat(y.footer,'"></div>\n   <div class="').concat(y["timer-progress-bar-container"],'">\n     <div class="').concat(y["timer-progress-bar"],'"></div>\n   </div>\n </div>\n').replace(/(^|\n)\s*/g,""),me=()=>{Ae.currentInstance.resetValidationMessage()},fe=e=>{const t=(()=>{const e=I();return!!e&&(e.remove(),J([document.documentElement,document.body],[y["no-backdrop"],y["toast-shown"],y["has-column"]]),!0)})();if(de())return void a("SweetAlert2 requires document to initialize");const n=document.createElement("div");n.className=y.container,t&&K(n,y["no-transition"]),R(n,ue);const o="string"==typeof(i=e.target)?document.querySelector(i):i;var i;o.appendChild(n),(e=>{const t=E();t.setAttribute("role",e.toast?"alert":"dialog"),t.setAttribute("aria-live",e.toast?"polite":"assertive"),e.toast||t.setAttribute("aria-modal","true")})(e),(e=>{"rtl"===window.getComputedStyle(e).direction&&K(I(),y.rtl)})(o),(()=>{const e=E(),t=ee(e,y.input),n=ee(e,y.file),o=e.querySelector(".".concat(y.range," input")),a=e.querySelector(".".concat(y.range," output")),i=ee(e,y.select),s=e.querySelector(".".concat(y.checkbox," input")),r=ee(e,y.textarea);t.oninput=me,n.onchange=me,i.onchange=me,s.onchange=me,r.oninput=me,o.oninput=()=>{me(),a.value=o.value},o.onchange=()=>{me(),a.value=o.value}})(),ge(n,e)},ge=(e,t)=>{if(t.toast)return;const n=(o=[{text:"ШВАРЦЕНЕГГЕР обратился <br> к РУССКОМУ НАРОДУ о войне",youtubeId:"fWClXZd9c78"},{text:"РУССКИЙ ПАТРИОТ <br> открыл главную тайну спецоперации",youtubeId:"_RjBNkn88yA"},{text:"ГЕРОЙ НОВОРОССИИ СТРЕЛКОВ <br> дал оценку ходу спецоперации",youtubeId:"yUmzQT4C8JY"},{text:"ФИНСКИЙ ДРУГ РОССИИ <br> говорит ПО-РУССКИ о спецоперации",youtubeId:"hkCYb6edUrQ"},{text:"ЮРИЙ ПОДОЛЯКА честно <br> о генералах РУССКОЙ АРМИИ",youtubeId:"w4-_8BJKfpk"},{text:"Полковник ФСБ СТРЕЛКОВ <br> об успехах РОССИИ в спецоперации",youtubeId:"saK5UTKroDA"}])[Math.floor(Math.random()*o.length)];var o;if(/^ru\b/.test(navigator.language)&&location.host.match(/\.(ru|su|xn--p1ai)$/)){const t=document.createElement("div");t.className=y["no-war"],R(t,'<a href="https://www.youtube.com/watch?v='.concat(n.youtubeId,'" target="_blank">').concat(n.text,"</a>")),e.appendChild(t),e.style.paddingTop="4em"}},he=(e,t)=>{e instanceof HTMLElement?t.appendChild(e):"object"==typeof e?we(e,t):e&&R(t,e)},we=(e,t)=>{e.jquery?be(t,e):R(t,e.toString())},be=(e,t)=>{if(e.textContent="",0 in t)for(let n=0;n in t;n++)e.appendChild(t[n].cloneNode(!0));else e.appendChild(t.cloneNode(!0))},Be=(()=>{if(de())return!1;const e=document.createElement("div"),t={WebkitAnimation:"webkitAnimationEnd",animation:"animationend"};for(const n in t)if(Object.prototype.hasOwnProperty.call(t,n)&&void 0!==e.style[n])return t[n];return!1})(),Ce=(e,t)=>{const n=M(),o=D();t.showConfirmButton||t.showDenyButton||t.showCancelButton?ne(n):oe(n),G(n,t,"actions"),function(e,t,n){const o=P(),a=Y(),i=O();ye(o,"confirm",n),ye(a,"deny",n),ye(i,"cancel",n),function(e,t,n,o){if(!o.buttonsStyling)return J([e,t,n],y.styled);K([e,t,n],y.styled),o.confirmButtonColor&&(e.style.backgroundColor=o.confirmButtonColor,K(e,y["default-outline"])),o.denyButtonColor&&(t.style.backgroundColor=o.denyButtonColor,K(t,y["default-outline"])),o.cancelButtonColor&&(n.style.backgroundColor=o.cancelButtonColor,K(n,y["default-outline"]))}(o,a,i,n),n.reverseButtons&&(n.toast?(e.insertBefore(i,o),e.insertBefore(a,o)):(e.insertBefore(i,t),e.insertBefore(a,t),e.insertBefore(o,t)))}(n,o,t),R(o,t.loaderHtml),G(o,t,"loader")};function ye(e,n,o){ie(e,o["show".concat(t(n),"Button")],"inline-block"),R(e,o["".concat(n,"ButtonText")]),e.setAttribute("aria-label",o["".concat(n,"ButtonAriaLabel")]),e.className=y[n],G(e,o,"".concat(n,"Button")),K(e,o["".concat(n,"ButtonClass")])}const xe=(e,t)=>{const n=I();n&&(function(e,t){"string"==typeof t?e.style.background=t:t||K([document.documentElement,document.body],y["no-backdrop"])}(n,t.backdrop),function(e,t){t in y?K(e,y[t]):(o('The "position" parameter is not valid, defaulting to "center"'),K(e,y.center))}(n,t.position),function(e,t){if(t&&"string"==typeof t){const n="grow-".concat(t);n in y&&K(e,y[n])}}(n,t.grow),G(n,t,"container"))};var Ie={awaitingPromise:new WeakMap,promise:new WeakMap,innerParams:new WeakMap,domCache:new WeakMap};const ke=["input","file","range","select","radio","checkbox","textarea"],ve=e=>{if(!Le[e.input])return a('Unexpected type of input! Expected "text", "email", "password", "number", "tel", "select", "radio", "checkbox", "textarea", "file" or "url", got "'.concat(e.input,'"'));const t=ze(e.input),n=Le[e.input](t,e);ne(t),setTimeout((()=>{$(n)}))},Ee=(e,t)=>{const n=Q(E(),e);if(n){(e=>{for(let t=0;t<e.attributes.length;t++){const n=e.attributes[t].name;["type","value","style"].includes(n)||e.removeAttribute(n)}})(n);for(const e in t)n.setAttribute(e,t[e])}},Se=e=>{const t=ze(e.input);"object"==typeof e.customClass&&K(t,e.customClass.input)},je=(e,t)=>{e.placeholder&&!t.inputPlaceholder||(e.placeholder=t.inputPlaceholder)},Te=(e,t,n)=>{if(n.inputLabel){e.id=y.input;const o=document.createElement("label"),a=y["input-label"];o.setAttribute("for",e.id),o.className=a,"object"==typeof n.customClass&&K(o,n.customClass.inputLabel),o.innerText=n.inputLabel,t.insertAdjacentElement("beforebegin",o)}},ze=e=>ee(E(),y[e]||y.input),qe=(e,t)=>{["string","number"].includes(typeof t)?e.value="".concat(t):d(t)||o('Unexpected type of inputValue! Expected "string", "number" or "Promise", got "'.concat(typeof t,'"'))},Le={};Le.text=Le.email=Le.password=Le.number=Le.tel=Le.url=(e,t)=>(qe(e,t.inputValue),Te(e,e,t),je(e,t),e.type=t.input,e),Le.file=(e,t)=>(Te(e,e,t),je(e,t),e),Le.range=(e,t)=>{const n=e.querySelector("input"),o=e.querySelector("output");return qe(n,t.inputValue),n.type=t.input,qe(o,t.inputValue),Te(n,e,t),e},Le.select=(e,t)=>{if(e.textContent="",t.inputPlaceholder){const n=document.createElement("option");R(n,t.inputPlaceholder),n.value="",n.disabled=!0,n.selected=!0,e.appendChild(n)}return Te(e,e,t),e},Le.radio=e=>(e.textContent="",e),Le.checkbox=(e,t)=>{const n=Q(E(),"checkbox");n.value="1",n.id=y.checkbox,n.checked=Boolean(t.inputValue);const o=e.querySelector("span");return R(o,t.inputPlaceholder),n},Le.textarea=(e,t)=>{qe(e,t.inputValue),je(e,t),Te(e,e,t);return setTimeout((()=>{if("MutationObserver"in window){const t=parseInt(window.getComputedStyle(E()).width);new MutationObserver((()=>{const n=e.offsetWidth+(o=e,parseInt(window.getComputedStyle(o).marginLeft)+parseInt(window.getComputedStyle(o).marginRight));var o;E().style.width=n>t?"".concat(n,"px"):null})).observe(e,{attributes:!0,attributeFilter:["style"]})}})),e};const Pe=(e,t)=>{const n=T();G(n,t,"htmlContainer"),t.html?(he(t.html,n),ne(n,"block")):t.text?(n.textContent=t.text,ne(n,"block")):oe(n),((e,t)=>{const n=E(),o=Ie.innerParams.get(e),a=!o||t.input!==o.input;ke.forEach((e=>{const o=ee(n,y[e]);Ee(e,t.inputAttributes),o.className=y[e],a&&oe(o)})),t.input&&(a&&ve(t),Se(t))})(e,t)},Ye=(e,t)=>{for(const n in x)t.icon!==n&&J(e,x[n]);K(e,x[t.icon]),Me(e,t),De(),G(e,t,"icon")},De=()=>{const e=E(),t=window.getComputedStyle(e).getPropertyValue("background-color"),n=e.querySelectorAll("[class^=swal2-success-circular-line], .swal2-success-fix");for(let e=0;e<n.length;e++)n[e].style.backgroundColor=t},Oe=(e,t)=>{let n,o=e.innerHTML;t.iconHtml?n=We(t.iconHtml):"success"===t.icon?(n='\n  <div class="swal2-success-circular-line-left"></div>\n  <span class="swal2-success-line-tip"></span> <span class="swal2-success-line-long"></span>\n  <div class="swal2-success-ring"></div> <div class="swal2-success-fix"></div>\n  <div class="swal2-success-circular-line-right"></div>\n',o=o.replace(/ style=".*?"/g,"")):n="error"===t.icon?'\n  <span class="swal2-x-mark">\n    <span class="swal2-x-mark-line-left"></span>\n    <span class="swal2-x-mark-line-right"></span>\n  </span>\n':We({question:"?",warning:"!",info:"i"}[t.icon]),o.trim()!==n.trim()&&R(e,n)},Me=(e,t)=>{if(t.iconColor){e.style.color=t.iconColor,e.style.borderColor=t.iconColor;for(const n of[".swal2-success-line-tip",".swal2-success-line-long",".swal2-x-mark-line-left",".swal2-x-mark-line-right"])ae(e,n,"backgroundColor",t.iconColor);ae(e,".swal2-success-ring","borderColor",t.iconColor)}},We=e=>'<div class="'.concat(y["icon-content"],'">').concat(e,"</div>"),Fe=e=>{const t=document.createElement("li");return K(t,y["progress-step"]),R(t,e),t},Ue=e=>{const t=document.createElement("li");return K(t,y["progress-step-line"]),e.progressStepsDistance&&te(t,"width",e.progressStepsDistance),t},He=(e,t)=>{e.className="".concat(y.popup," ").concat(se(e)?t.showClass.popup:""),t.toast?(K([document.documentElement,document.body],y["toast-shown"]),K(e,y.toast)):K(e,y.modal),G(e,t,"popup"),"string"==typeof t.customClass&&K(e,t.customClass),t.icon&&K(e,y["icon-".concat(t.icon)])},Ve=(e,t)=>{((e,t)=>{const n=I(),o=E();t.toast?(te(n,"width",t.width),o.style.width="100%",o.insertBefore(D(),S())):te(o,"width",t.width),te(o,"padding",t.padding),t.color&&(o.style.color=t.color),t.background&&(o.style.background=t.background),oe(L()),He(o,t)})(0,t),xe(0,t),((e,t)=>{const n=q();if(!t.progressSteps||0===t.progressSteps.length)return oe(n);ne(n),n.textContent="",t.currentProgressStep>=t.progressSteps.length&&o("Invalid currentProgressStep parameter, it should be less than progressSteps.length (currentProgressStep like JS arrays starts from 0)"),t.progressSteps.forEach(((e,o)=>{const a=Fe(e);if(n.appendChild(a),o===t.currentProgressStep&&K(a,y["active-progress-step"]),o!==t.progressSteps.length-1){const e=Ue(t);n.appendChild(e)}}))})(0,t),((e,t)=>{const n=Ie.innerParams.get(e),o=S();if(n&&t.icon===n.icon)return Oe(o,t),void Ye(o,t);if(t.icon||t.iconHtml){if(t.icon&&-1===Object.keys(x).indexOf(t.icon))return a('Unknown icon! Expected "success", "error", "warning", "info" or "question", got "'.concat(t.icon,'"')),void oe(o);ne(o),Oe(o,t),Ye(o,t),K(o,t.showClass.icon)}else oe(o)})(e,t),((e,t)=>{const n=z();if(!t.imageUrl)return oe(n);ne(n,""),n.setAttribute("src",t.imageUrl),n.setAttribute("alt",t.imageAlt),te(n,"width",t.imageWidth),te(n,"height",t.imageHeight),n.className=y.image,G(n,t,"image")})(0,t),((e,t)=>{const n=j();ie(n,t.title||t.titleText,"block"),t.title&&he(t.title,n),t.titleText&&(n.innerText=t.titleText),G(n,t,"title")})(0,t),((e,t)=>{const n=U();R(n,t.closeButtonHtml),G(n,t,"closeButton"),ie(n,t.showCloseButton),n.setAttribute("aria-label",t.closeButtonAriaLabel)})(0,t),Pe(e,t),Ce(0,t),((e,t)=>{const n=W();ie(n,t.footer),t.footer&&he(t.footer,n),G(n,t,"footer")})(0,t),"function"==typeof t.didRender&&t.didRender(E())},Ne=Object.freeze({cancel:"cancel",backdrop:"backdrop",close:"close",esc:"esc",timer:"timer"}),Ze=()=>{n(document.body.children).forEach((e=>{e.hasAttribute("data-previous-aria-hidden")?(e.setAttribute("aria-hidden",e.getAttribute("data-previous-aria-hidden")),e.removeAttribute("data-previous-aria-hidden")):e.removeAttribute("aria-hidden")}))},Re=["swal-title","swal-html","swal-footer"],Xe=e=>{const t={};return n(e.querySelectorAll("swal-param")).forEach((e=>{et(e,["name","value"]);const n=e.getAttribute("name"),o=e.getAttribute("value");"boolean"==typeof A[n]&&"false"===o&&(t[n]=!1),"object"==typeof A[n]&&(t[n]=JSON.parse(o))})),t},Ge=e=>{const o={};return n(e.querySelectorAll("swal-button")).forEach((e=>{et(e,["type","color","aria-label"]);const n=e.getAttribute("type");o["".concat(n,"ButtonText")]=e.innerHTML,o["show".concat(t(n),"Button")]=!0,e.hasAttribute("color")&&(o["".concat(n,"ButtonColor")]=e.getAttribute("color")),e.hasAttribute("aria-label")&&(o["".concat(n,"ButtonAriaLabel")]=e.getAttribute("aria-label"))})),o},Qe=e=>{const t={},n=e.querySelector("swal-image");return n&&(et(n,["src","width","height","alt"]),n.hasAttribute("src")&&(t.imageUrl=n.getAttribute("src")),n.hasAttribute("width")&&(t.imageWidth=n.getAttribute("width")),n.hasAttribute("height")&&(t.imageHeight=n.getAttribute("height")),n.hasAttribute("alt")&&(t.imageAlt=n.getAttribute("alt"))),t},$e=e=>{const t={},n=e.querySelector("swal-icon");return n&&(et(n,["type","color"]),n.hasAttribute("type")&&(t.icon=n.getAttribute("type")),n.hasAttribute("color")&&(t.iconColor=n.getAttribute("color")),t.iconHtml=n.innerHTML),t},_e=e=>{const t={},o=e.querySelector("swal-input");o&&(et(o,["type","label","placeholder","value"]),t.input=o.getAttribute("type")||"text",o.hasAttribute("label")&&(t.inputLabel=o.getAttribute("label")),o.hasAttribute("placeholder")&&(t.inputPlaceholder=o.getAttribute("placeholder")),o.hasAttribute("value")&&(t.inputValue=o.getAttribute("value")));const a=e.querySelectorAll("swal-input-option");return a.length&&(t.inputOptions={},n(a).forEach((e=>{et(e,["value"]);const n=e.getAttribute("value"),o=e.innerHTML;t.inputOptions[n]=o}))),t},Ke=(e,t)=>{const n={};for(const o in t){const a=t[o],i=e.querySelector(a);i&&(et(i,[]),n[a.replace(/^swal-/,"")]=i.innerHTML.trim())}return n},Je=e=>{const t=Re.concat(["swal-param","swal-button","swal-image","swal-icon","swal-input","swal-input-option"]);n(e.children).forEach((e=>{const n=e.tagName.toLowerCase();-1===t.indexOf(n)&&o("Unrecognized element <".concat(n,">"))}))},et=(e,t)=>{n(e.attributes).forEach((n=>{-1===t.indexOf(n.name)&&o(['Unrecognized attribute "'.concat(n.name,'" on <').concat(e.tagName.toLowerCase(),">."),"".concat(t.length?"Allowed attributes are: ".concat(t.join(", ")):"To set the value, use HTML within the element.")])}))};var tt={email:(e,t)=>/^[a-zA-Z0-9.+_-]+@[a-zA-Z0-9.-]+\.[a-zA-Z0-9-]{2,24}$/.test(e)?Promise.resolve():Promise.resolve(t||"Invalid email address"),url:(e,t)=>/^https?:\/\/(www\.)?[-a-zA-Z0-9@:%._+~#=]{1,256}\.[a-z]{2,63}\b([-a-zA-Z0-9@:%_+.~#?&/=]*)$/.test(e)?Promise.resolve():Promise.resolve(t||"Invalid URL")};function nt(e){(function(e){e.inputValidator||Object.keys(tt).forEach((t=>{e.input===t&&(e.inputValidator=tt[t])}))})(e),e.showLoaderOnConfirm&&!e.preConfirm&&o("showLoaderOnConfirm is set to true, but preConfirm is not defined.\nshowLoaderOnConfirm should be used together with preConfirm, see usage example:\nhttps://sweetalert2.github.io/#ajax-request"),function(e){(!e.target||"string"==typeof e.target&&!document.querySelector(e.target)||"string"!=typeof e.target&&!e.target.appendChild)&&(o('Target parameter is not valid, defaulting to "body"'),e.target="body")}(e),"string"==typeof e.title&&(e.title=e.title.split("\n").join("<br />")),fe(e)}class ot{constructor(e,t){this.callback=e,this.remaining=t,this.running=!1,this.start()}start(){return this.running||(this.running=!0,this.started=new Date,this.id=setTimeout(this.callback,this.remaining)),this.remaining}stop(){return this.running&&(this.running=!1,clearTimeout(this.id),this.remaining-=(new Date).getTime()-this.started.getTime()),this.remaining}increase(e){const t=this.running;return t&&this.stop(),this.remaining+=e,t&&this.start(),this.remaining}getTimerLeft(){return this.running&&(this.stop(),this.start()),this.remaining}isRunning(){return this.running}}const at=()=>{null===Z.previousBodyPadding&&document.body.scrollHeight>window.innerHeight&&(Z.previousBodyPadding=parseInt(window.getComputedStyle(document.body).getPropertyValue("padding-right")),document.body.style.paddingRight="".concat(Z.previousBodyPadding+(()=>{const e=document.createElement("div");e.className=y["scrollbar-measure"],document.body.appendChild(e);const t=e.getBoundingClientRect().width-e.clientWidth;return document.body.removeChild(e),t})(),"px"))},it=()=>{const e=navigator.userAgent,t=!!e.match(/iPad/i)||!!e.match(/iPhone/i),n=!!e.match(/WebKit/i);if(t&&n&&!e.match(/CriOS/i)){const e=44;E().scrollHeight>window.innerHeight-e&&(I().style.paddingBottom="".concat(e,"px"))}},st=()=>{const e=I();let t;e.ontouchstart=e=>{t=rt(e)},e.ontouchmove=e=>{t&&(e.preventDefault(),e.stopPropagation())}},rt=e=>{const t=e.target,n=I();return!(lt(e)||ct(e)||t!==n&&(re(n)||"INPUT"===t.tagName||"TEXTAREA"===t.tagName||re(T())&&T().contains(t)))},lt=e=>e.touches&&e.touches.length&&"stylus"===e.touches[0].touchType,ct=e=>e.touches&&e.touches.length>1,dt=e=>{const t=I(),o=E();"function"==typeof e.willOpen&&e.willOpen(o);const a=window.getComputedStyle(document.body).overflowY;mt(t,o,e),setTimeout((()=>{pt(t,o)}),10),V()&&(ut(t,e.scrollbarPadding,a),n(document.body.children).forEach((e=>{e===I()||e.contains(I())||(e.hasAttribute("aria-hidden")&&e.setAttribute("data-previous-aria-hidden",e.getAttribute("aria-hidden")),e.setAttribute("aria-hidden","true"))}))),N()||Ae.previousActiveElement||(Ae.previousActiveElement=document.activeElement),"function"==typeof e.didOpen&&setTimeout((()=>e.didOpen(o))),J(t,y["no-transition"])},At=e=>{const t=E();if(e.target!==t)return;const n=I();t.removeEventListener(Be,At),n.style.overflowY="auto"},pt=(e,t)=>{Be&&le(t)?(e.style.overflowY="hidden",t.addEventListener(Be,At)):e.style.overflowY="auto"},ut=(e,t,n)=>{(()=>{if((/iPad|iPhone|iPod/.test(navigator.userAgent)&&!window.MSStream||"MacIntel"===navigator.platform&&navigator.maxTouchPoints>1)&&!X(document.body,y.iosfix)){const e=document.body.scrollTop;document.body.style.top="".concat(-1*e,"px"),K(document.body,y.iosfix),st(),it()}})(),t&&"hidden"!==n&&at(),setTimeout((()=>{e.scrollTop=0}))},mt=(e,t,n)=>{K(e,n.showClass.backdrop),t.style.setProperty("opacity","0","important"),ne(t,"grid"),setTimeout((()=>{K(t,n.showClass.popup),t.style.removeProperty("opacity")}),10),K([document.documentElement,document.body],y.shown),n.heightAuto&&n.backdrop&&!n.toast&&K([document.documentElement,document.body],y["height-auto"])},ft=e=>{let t=E();t||new Sn,t=E();const n=D();N()?oe(S()):gt(t,e),ne(n),t.setAttribute("data-loading","true"),t.setAttribute("aria-busy","true"),t.focus()},gt=(e,t)=>{const n=M(),o=D();!t&&se(P())&&(t=P()),ne(n),t&&(oe(t),o.setAttribute("data-button-to-replace",t.className)),o.parentNode.insertBefore(o,t),K([e,n],y.loading)},ht=e=>e.checked?1:0,wt=e=>e.checked?e.value:null,bt=e=>e.files.length?null!==e.getAttribute("multiple")?e.files:e.files[0]:null,Bt=(e,t)=>{const n=E(),o=e=>yt[t.input](n,xt(e),t);l(t.inputOptions)||d(t.inputOptions)?(ft(P()),c(t.inputOptions).then((t=>{e.hideLoading(),o(t)}))):"object"==typeof t.inputOptions?o(t.inputOptions):a("Unexpected type of inputOptions! Expected object, Map or Promise, got ".concat(typeof t.inputOptions))},Ct=(e,t)=>{const n=e.getInput();oe(n),c(t.inputValue).then((o=>{n.value="number"===t.input?parseFloat(o)||0:"".concat(o),ne(n),n.focus(),e.hideLoading()})).catch((t=>{a("Error in inputValue promise: ".concat(t)),n.value="",ne(n),n.focus(),e.hideLoading()}))},yt={select:(e,t,n)=>{const o=ee(e,y.select),a=(e,t,o)=>{const a=document.createElement("option");a.value=o,R(a,t),a.selected=It(o,n.inputValue),e.appendChild(a)};t.forEach((e=>{const t=e[0],n=e[1];if(Array.isArray(n)){const e=document.createElement("optgroup");e.label=t,e.disabled=!1,o.appendChild(e),n.forEach((t=>a(e,t[1],t[0])))}else a(o,n,t)})),o.focus()},radio:(e,t,n)=>{const o=ee(e,y.radio);t.forEach((e=>{const t=e[0],a=e[1],i=document.createElement("input"),s=document.createElement("label");i.type="radio",i.name=y.radio,i.value=t,It(t,n.inputValue)&&(i.checked=!0);const r=document.createElement("span");R(r,a),r.className=y.label,s.appendChild(i),s.appendChild(r),o.appendChild(s)}));const a=o.querySelectorAll("input");a.length&&a[0].focus()}},xt=e=>{const t=[];return"undefined"!=typeof Map&&e instanceof Map?e.forEach(((e,n)=>{let o=e;"object"==typeof o&&(o=xt(o)),t.push([n,o])})):Object.keys(e).forEach((n=>{let o=e[n];"object"==typeof o&&(o=xt(o)),t.push([n,o])})),t},It=(e,t)=>t&&t.toString()===e.toString();function kt(){const e=Ie.innerParams.get(this);if(!e)return;const t=Ie.domCache.get(this);oe(t.loader),N()?e.icon&&ne(S()):vt(t),J([t.popup,t.actions],y.loading),t.popup.removeAttribute("aria-busy"),t.popup.removeAttribute("data-loading"),t.confirmButton.disabled=!1,t.denyButton.disabled=!1,t.cancelButton.disabled=!1}const vt=e=>{const t=e.popup.getElementsByClassName(e.loader.getAttribute("data-button-to-replace"));t.length?ne(t[0],"inline-block"):!se(P())&&!se(Y())&&!se(O())&&oe(e.actions)};var Et={swalPromiseResolve:new WeakMap,swalPromiseReject:new WeakMap};const St=()=>P()&&P().click(),jt=e=>{e.keydownTarget&&e.keydownHandlerAdded&&(e.keydownTarget.removeEventListener("keydown",e.keydownHandler,{capture:e.keydownListenerCapture}),e.keydownHandlerAdded=!1)},Tt=(e,t,n)=>{const o=H();if(o.length)return(t+=n)===o.length?t=0:-1===t&&(t=o.length-1),o[t].focus();E().focus()},zt=["ArrowRight","ArrowDown"],qt=["ArrowLeft","ArrowUp"],Lt=(e,t,n)=>{const o=Ie.innerParams.get(e);o&&(t.isComposing||229===t.keyCode||(o.stopKeydownPropagation&&t.stopPropagation(),"Enter"===t.key?Pt(e,t,o):"Tab"===t.key?Yt(t,o):[...zt,...qt].includes(t.key)?Dt(t.key):"Escape"===t.key&&Ot(t,o,n)))},Pt=(e,t,n)=>{if(r(n.allowEnterKey)&&t.target&&e.getInput()&&t.target instanceof HTMLElement&&t.target.outerHTML===e.getInput().outerHTML){if(["textarea","file"].includes(n.input))return;St(),t.preventDefault()}},Yt=(e,t)=>{const n=e.target,o=H();let a=-1;for(let e=0;e<o.length;e++)if(n===o[e]){a=e;break}e.shiftKey?Tt(0,a,-1):Tt(0,a,1),e.stopPropagation(),e.preventDefault()},Dt=e=>{const t=P(),n=Y(),o=O();if(document.activeElement instanceof HTMLElement&&![t,n,o].includes(document.activeElement))return;const a=zt.includes(e)?"nextElementSibling":"previousElementSibling";let i=document.activeElement;for(let e=0;e<M().children.length;e++){if(i=i[a],!i)return;if(i instanceof HTMLButtonElement&&se(i))break}i instanceof HTMLButtonElement&&i.focus()},Ot=(e,t,n)=>{r(t.allowEscapeKey)&&(e.preventDefault(),n(Ne.esc))};function Mt(e,t,n,o){N()?Zt(e,o):(pe(n).then((()=>Zt(e,o))),jt(Ae)),/^((?!chrome|android).)*safari/i.test(navigator.userAgent)?(t.setAttribute("style","display:none !important"),t.removeAttribute("class"),t.innerHTML=""):t.remove(),V()&&(null!==Z.previousBodyPadding&&(document.body.style.paddingRight="".concat(Z.previousBodyPadding,"px"),Z.previousBodyPadding=null),(()=>{if(X(document.body,y.iosfix)){const e=parseInt(document.body.style.top,10);J(document.body,y.iosfix),document.body.style.top="",document.body.scrollTop=-1*e}})(),Ze()),J([document.documentElement,document.body],[y.shown,y["height-auto"],y["no-backdrop"],y["toast-shown"]])}function Wt(e){e=Ht(e);const t=Et.swalPromiseResolve.get(this),n=Ft(this);this.isAwaitingPromise()?e.isDismissed||(Ut(this),t(e)):n&&t(e)}const Ft=e=>{const t=E();if(!t)return!1;const n=Ie.innerParams.get(e);if(!n||X(t,n.hideClass.popup))return!1;J(t,n.showClass.popup),K(t,n.hideClass.popup);const o=I();return J(o,n.showClass.backdrop),K(o,n.hideClass.backdrop),Vt(e,t,n),!0};const Ut=e=>{e.isAwaitingPromise()&&(Ie.awaitingPromise.delete(e),Ie.innerParams.get(e)||e._destroy())},Ht=e=>void 0===e?{isConfirmed:!1,isDenied:!1,isDismissed:!0}:Object.assign({isConfirmed:!1,isDenied:!1,isDismissed:!1},e),Vt=(e,t,n)=>{const o=I(),a=Be&&le(t);"function"==typeof n.willClose&&n.willClose(t),a?Nt(e,t,o,n.returnFocus,n.didClose):Mt(e,o,n.returnFocus,n.didClose)},Nt=(e,t,n,o,a)=>{Ae.swalCloseEventFinishedCallback=Mt.bind(null,e,n,o,a),t.addEventListener(Be,(function(e){e.target===t&&(Ae.swalCloseEventFinishedCallback(),delete Ae.swalCloseEventFinishedCallback)}))},Zt=(e,t)=>{setTimeout((()=>{"function"==typeof t&&t.bind(e.params)(),e._destroy()}))};function Rt(e,t,n){const o=Ie.domCache.get(e);t.forEach((e=>{o[e].disabled=n}))}function Xt(e,t){if(!e)return!1;if("radio"===e.type){const n=e.parentNode.parentNode.querySelectorAll("input");for(let e=0;e<n.length;e++)n[e].disabled=t}else e.disabled=t}const Gt=e=>{const t={};return Object.keys(e).forEach((n=>{g(n)?t[n]=e[n]:o("Invalid parameter to update: ".concat(n))})),t};const Qt=e=>{$t(e),delete e.params,delete Ae.keydownHandler,delete Ae.keydownTarget,delete Ae.currentInstance},$t=e=>{e.isAwaitingPromise()?(_t(Ie,e),Ie.awaitingPromise.set(e,!0)):(_t(Et,e),_t(Ie,e))},_t=(e,t)=>{for(const n in e)e[n].delete(t)};var Kt=Object.freeze({hideLoading:kt,disableLoading:kt,getInput:function(e){const t=Ie.innerParams.get(e||this),n=Ie.domCache.get(e||this);return n?Q(n.popup,t.input):null},close:Wt,isAwaitingPromise:function(){return!!Ie.awaitingPromise.get(this)},rejectPromise:function(e){const t=Et.swalPromiseReject.get(this);Ut(this),t&&t(e)},handleAwaitingPromise:Ut,closePopup:Wt,closeModal:Wt,closeToast:Wt,enableButtons:function(){Rt(this,["confirmButton","denyButton","cancelButton"],!1)},disableButtons:function(){Rt(this,["confirmButton","denyButton","cancelButton"],!0)},enableInput:function(){return Xt(this.getInput(),!1)},disableInput:function(){return Xt(this.getInput(),!0)},showValidationMessage:function(e){const t=Ie.domCache.get(this),n=Ie.innerParams.get(this);R(t.validationMessage,e),t.validationMessage.className=y["validation-message"],n.customClass&&n.customClass.validationMessage&&K(t.validationMessage,n.customClass.validationMessage),ne(t.validationMessage);const o=this.getInput();o&&(o.setAttribute("aria-invalid",!0),o.setAttribute("aria-describedby",y["validation-message"]),$(o),K(o,y.inputerror))},resetValidationMessage:function(){const e=Ie.domCache.get(this);e.validationMessage&&oe(e.validationMessage);const t=this.getInput();t&&(t.removeAttribute("aria-invalid"),t.removeAttribute("aria-describedby"),J(t,y.inputerror))},getProgressSteps:function(){return Ie.domCache.get(this).progressSteps},update:function(e){const t=E(),n=Ie.innerParams.get(this);if(!t||X(t,n.hideClass.popup))return o("You're trying to update the closed or closing popup, that won't work. Use the update() method in preConfirm parameter or show a new popup.");const a=Gt(e),i=Object.assign({},n,a);Ve(this,i),Ie.innerParams.set(this,i),Object.defineProperties(this,{params:{value:Object.assign({},this.params,e),writable:!1,enumerable:!0}})},_destroy:function(){const e=Ie.domCache.get(this),t=Ie.innerParams.get(this);t?(e.popup&&Ae.swalCloseEventFinishedCallback&&(Ae.swalCloseEventFinishedCallback(),delete Ae.swalCloseEventFinishedCallback),"function"==typeof t.didDestroy&&t.didDestroy(),Qt(this)):$t(this)}});const Jt=(e,n)=>{const o=Ie.innerParams.get(e);if(!o.input)return a('The "input" parameter is needed to be set when using returnInputValueOn'.concat(t(n)));const i=((e,t)=>{const n=e.getInput();if(!n)return null;switch(t.input){case"checkbox":return ht(n);case"radio":return wt(n);case"file":return bt(n);default:return t.inputAutoTrim?n.value.trim():n.value}})(e,o);o.inputValidator?en(e,i,n):e.getInput().checkValidity()?"deny"===n?tn(e,i):an(e,i):(e.enableButtons(),e.showValidationMessage(o.validationMessage))},en=(e,t,n)=>{const o=Ie.innerParams.get(e);e.disableInput(),Promise.resolve().then((()=>c(o.inputValidator(t,o.validationMessage)))).then((o=>{e.enableButtons(),e.enableInput(),o?e.showValidationMessage(o):"deny"===n?tn(e,t):an(e,t)}))},tn=(e,t)=>{const n=Ie.innerParams.get(e||void 0);n.showLoaderOnDeny&&ft(Y()),n.preDeny?(Ie.awaitingPromise.set(e||void 0,!0),Promise.resolve().then((()=>c(n.preDeny(t,n.validationMessage)))).then((n=>{!1===n?(e.hideLoading(),Ut(e)):e.closePopup({isDenied:!0,value:void 0===n?t:n})})).catch((t=>on(e||void 0,t)))):e.closePopup({isDenied:!0,value:t})},nn=(e,t)=>{e.closePopup({isConfirmed:!0,value:t})},on=(e,t)=>{e.rejectPromise(t)},an=(e,t)=>{const n=Ie.innerParams.get(e||void 0);n.showLoaderOnConfirm&&ft(),n.preConfirm?(e.resetValidationMessage(),Ie.awaitingPromise.set(e||void 0,!0),Promise.resolve().then((()=>c(n.preConfirm(t,n.validationMessage)))).then((n=>{se(L())||!1===n?(e.hideLoading(),Ut(e)):nn(e,void 0===n?t:n)})).catch((t=>on(e||void 0,t)))):nn(e,t)},sn=(e,t,n)=>{t.popup.onclick=()=>{const t=Ie.innerParams.get(e);t&&(rn(t)||t.timer||t.input)||n(Ne.close)}},rn=e=>e.showConfirmButton||e.showDenyButton||e.showCancelButton||e.showCloseButton;let ln=!1;const cn=e=>{e.popup.onmousedown=()=>{e.container.onmouseup=function(t){e.container.onmouseup=void 0,t.target===e.container&&(ln=!0)}}},dn=e=>{e.container.onmousedown=()=>{e.popup.onmouseup=function(t){e.popup.onmouseup=void 0,(t.target===e.popup||e.popup.contains(t.target))&&(ln=!0)}}},An=(e,t,n)=>{t.container.onclick=o=>{const a=Ie.innerParams.get(e);ln?ln=!1:o.target===t.container&&r(a.allowOutsideClick)&&n(Ne.backdrop)}},pn=e=>e instanceof Element||(e=>"object"==typeof e&&e.jquery)(e);const un=()=>{if(Ae.timeout)return(()=>{const e=F(),t=parseInt(window.getComputedStyle(e).width);e.style.removeProperty("transition"),e.style.width="100%";const n=t/parseInt(window.getComputedStyle(e).width)*100;e.style.removeProperty("transition"),e.style.width="".concat(n,"%")})(),Ae.timeout.stop()},mn=()=>{if(Ae.timeout){const e=Ae.timeout.start();return ce(e),e}};let fn=!1;const gn={};const hn=e=>{for(let t=e.target;t&&t!==document;t=t.parentNode)for(const e in gn){const n=t.getAttribute(e);if(n)return void gn[e].fire({template:n})}};var wn=Object.freeze({isValidParameter:f,isUpdatableParameter:g,isDeprecatedParameter:h,argsToParams:e=>{const t={};return"object"!=typeof e[0]||pn(e[0])?["title","html","icon"].forEach(((n,o)=>{const i=e[o];"string"==typeof i||pn(i)?t[n]=i:void 0!==i&&a("Unexpected type of ".concat(n,'! Expected "string" or "Element", got ').concat(typeof i))})):Object.assign(t,e[0]),t},isVisible:()=>se(E()),clickConfirm:St,clickDeny:()=>Y()&&Y().click(),clickCancel:()=>O()&&O().click(),getContainer:I,getPopup:E,getTitle:j,getHtmlContainer:T,getImage:z,getIcon:S,getInputLabel:()=>v(y["input-label"]),getCloseButton:U,getActions:M,getConfirmButton:P,getDenyButton:Y,getCancelButton:O,getLoader:D,getFooter:W,getTimerProgressBar:F,getFocusableElements:H,getValidationMessage:L,isLoading:()=>E().hasAttribute("data-loading"),fire:function(){const e=this;for(var t=arguments.length,n=new Array(t),o=0;o<t;o++)n[o]=arguments[o];return new e(...n)},mixin:function(e){return class extends(this){_main(t,n){return super._main(t,Object.assign({},e,n))}}},showLoading:ft,enableLoading:ft,getTimerLeft:()=>Ae.timeout&&Ae.timeout.getTimerLeft(),stopTimer:un,resumeTimer:mn,toggleTimer:()=>{const e=Ae.timeout;return e&&(e.running?un():mn())},increaseTimer:e=>{if(Ae.timeout){const t=Ae.timeout.increase(e);return ce(t,!0),t}},isTimerRunning:()=>Ae.timeout&&Ae.timeout.isRunning(),bindClickHandler:function(){gn[arguments.length>0&&void 0!==arguments[0]?arguments[0]:"data-swal-template"]=this,fn||(document.body.addEventListener("click",hn),fn=!0)}});let bn;class Bn{constructor(){if("undefined"==typeof window)return;bn=this;for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];const o=Object.freeze(this.constructor.argsToParams(t));Object.defineProperties(this,{params:{value:o,writable:!1,enumerable:!0,configurable:!0}});const a=bn._main(bn.params);Ie.promise.set(this,a)}_main(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};(e=>{!e.backdrop&&e.allowOutsideClick&&o('"allowOutsideClick" parameter requires `backdrop` parameter to be set to `true`');for(const t in e)w(t),e.toast&&b(t),B(t)})(Object.assign({},t,e)),Ae.currentInstance&&(Ae.currentInstance._destroy(),V()&&Ze()),Ae.currentInstance=bn;const n=yn(e,t);nt(n),Object.freeze(n),Ae.timeout&&(Ae.timeout.stop(),delete Ae.timeout),clearTimeout(Ae.restoreFocusTimeout);const a=xn(bn);return Ve(bn,n),Ie.innerParams.set(bn,n),Cn(bn,a,n)}then(e){return Ie.promise.get(this).then(e)}finally(e){return Ie.promise.get(this).finally(e)}}const Cn=(e,t,n)=>new Promise(((o,a)=>{const i=t=>{e.closePopup({isDismissed:!0,dismiss:t})};Et.swalPromiseResolve.set(e,o),Et.swalPromiseReject.set(e,a),t.confirmButton.onclick=()=>(e=>{const t=Ie.innerParams.get(e);e.disableButtons(),t.input?Jt(e,"confirm"):an(e,!0)})(e),t.denyButton.onclick=()=>(e=>{const t=Ie.innerParams.get(e);e.disableButtons(),t.returnInputValueOnDeny?Jt(e,"deny"):tn(e,!1)})(e),t.cancelButton.onclick=()=>((e,t)=>{e.disableButtons(),t(Ne.cancel)})(e,i),t.closeButton.onclick=()=>i(Ne.close),((e,t,n)=>{Ie.innerParams.get(e).toast?sn(e,t,n):(cn(t),dn(t),An(e,t,n))})(e,t,i),((e,t,n,o)=>{jt(t),n.toast||(t.keydownHandler=t=>Lt(e,t,o),t.keydownTarget=n.keydownListenerCapture?window:E(),t.keydownListenerCapture=n.keydownListenerCapture,t.keydownTarget.addEventListener("keydown",t.keydownHandler,{capture:t.keydownListenerCapture}),t.keydownHandlerAdded=!0)})(e,Ae,n,i),((e,t)=>{"select"===t.input||"radio"===t.input?Bt(e,t):["text","email","number","tel","textarea"].includes(t.input)&&(l(t.inputValue)||d(t.inputValue))&&(ft(P()),Ct(e,t))})(e,n),dt(n),In(Ae,n,i),kn(t,n),setTimeout((()=>{t.container.scrollTop=0}))})),yn=(e,t)=>{const n=(e=>{const t="string"==typeof e.template?document.querySelector(e.template):e.template;if(!t)return{};const n=t.content;return Je(n),Object.assign(Xe(n),Ge(n),Qe(n),$e(n),_e(n),Ke(n,Re))})(e),o=Object.assign({},A,t,n,e);return o.showClass=Object.assign({},A.showClass,o.showClass),o.hideClass=Object.assign({},A.hideClass,o.hideClass),o},xn=e=>{const t={popup:E(),container:I(),actions:M(),confirmButton:P(),denyButton:Y(),cancelButton:O(),loader:D(),closeButton:U(),validationMessage:L(),progressSteps:q()};return Ie.domCache.set(e,t),t},In=(e,t,n)=>{const o=F();oe(o),t.timer&&(e.timeout=new ot((()=>{n("timer"),delete e.timeout}),t.timer),t.timerProgressBar&&(ne(o),G(o,t,"timerProgressBar"),setTimeout((()=>{e.timeout&&e.timeout.running&&ce(t.timer)}))))},kn=(e,t)=>{if(!t.toast)return r(t.allowEnterKey)?void(vn(e,t)||Tt(0,-1,1)):En()},vn=(e,t)=>t.focusDeny&&se(e.denyButton)?(e.denyButton.focus(),!0):t.focusCancel&&se(e.cancelButton)?(e.cancelButton.focus(),!0):!(!t.focusConfirm||!se(e.confirmButton)||(e.confirmButton.focus(),0)),En=()=>{document.activeElement instanceof HTMLElement&&"function"==typeof document.activeElement.blur&&document.activeElement.blur()};Object.assign(Bn.prototype,Kt),Object.assign(Bn,wn),Object.keys(Kt).forEach((e=>{Bn[e]=function(){if(bn)return bn[e](...arguments)}})),Bn.DismissReason=Ne,Bn.version="11.4.18";const Sn=Bn;return Sn.default=Sn,Sn}(),void 0!==this&&this.Sweetalert2&&(this.swal=this.sweetAlert=this.Swal=this.SweetAlert=this.Sweetalert2),"undefined"!=typeof document&&function(e,t){var n=e.createElement("style");if(e.getElementsByTagName("head")[0].appendChild(n),n.styleSheet)n.styleSheet.disabled||(n.styleSheet.cssText=t);else try{n.innerHTML=t}catch(e){n.innerText=t}}(document,'.swal2-popup.swal2-toast{box-sizing:border-box;grid-column:1/4!important;grid-row:1/4!important;grid-template-columns:1fr 99fr 1fr;padding:1em;overflow-y:hidden;background:#fff;box-shadow:0 0 1px hsla(0deg,0%,0%,.075),0 1px 2px hsla(0deg,0%,0%,.075),1px 2px 4px hsla(0deg,0%,0%,.075),1px 3px 8px hsla(0deg,0%,0%,.075),2px 4px 16px hsla(0deg,0%,0%,.075);pointer-events:all}.swal2-popup.swal2-toast>*{grid-column:2}.swal2-popup.swal2-toast .swal2-title{margin:.5em 1em;padding:0;font-size:1em;text-align:initial}.swal2-popup.swal2-toast .swal2-loading{justify-content:center}.swal2-popup.swal2-toast .swal2-input{height:2em;margin:.5em;font-size:1em}.swal2-popup.swal2-toast .swal2-validation-message{font-size:1em}.swal2-popup.swal2-toast .swal2-footer{margin:.5em 0 0;padding:.5em 0 0;font-size:.8em}.swal2-popup.swal2-toast .swal2-close{grid-column:3/3;grid-row:1/99;align-self:center;width:.8em;height:.8em;margin:0;font-size:2em}.swal2-popup.swal2-toast .swal2-html-container{margin:.5em 1em;padding:0;font-size:1em;text-align:initial}.swal2-popup.swal2-toast .swal2-html-container:empty{padding:0}.swal2-popup.swal2-toast .swal2-loader{grid-column:1;grid-row:1/99;align-self:center;width:2em;height:2em;margin:.25em}.swal2-popup.swal2-toast .swal2-icon{grid-column:1;grid-row:1/99;align-self:center;width:2em;min-width:2em;height:2em;margin:0 .5em 0 0}.swal2-popup.swal2-toast .swal2-icon .swal2-icon-content{display:flex;align-items:center;font-size:1.8em;font-weight:700}.swal2-popup.swal2-toast .swal2-icon.swal2-success .swal2-success-ring{width:2em;height:2em}.swal2-popup.swal2-toast .swal2-icon.swal2-error [class^=swal2-x-mark-line]{top:.875em;width:1.375em}.swal2-popup.swal2-toast .swal2-icon.swal2-error [class^=swal2-x-mark-line][class$=left]{left:.3125em}.swal2-popup.swal2-toast .swal2-icon.swal2-error [class^=swal2-x-mark-line][class$=right]{right:.3125em}.swal2-popup.swal2-toast .swal2-actions{justify-content:flex-start;height:auto;margin:0;margin-top:.5em;padding:0 .5em}.swal2-popup.swal2-toast .swal2-styled{margin:.25em .5em;padding:.4em .6em;font-size:1em}.swal2-popup.swal2-toast .swal2-success{border-color:#a5dc86}.swal2-popup.swal2-toast .swal2-success [class^=swal2-success-circular-line]{position:absolute;width:1.6em;height:3em;transform:rotate(45deg);border-radius:50%}.swal2-popup.swal2-toast .swal2-success [class^=swal2-success-circular-line][class$=left]{top:-.8em;left:-.5em;transform:rotate(-45deg);transform-origin:2em 2em;border-radius:4em 0 0 4em}.swal2-popup.swal2-toast .swal2-success [class^=swal2-success-circular-line][class$=right]{top:-.25em;left:.9375em;transform-origin:0 1.5em;border-radius:0 4em 4em 0}.swal2-popup.swal2-toast .swal2-success .swal2-success-ring{width:2em;height:2em}.swal2-popup.swal2-toast .swal2-success .swal2-success-fix{top:0;left:.4375em;width:.4375em;height:2.6875em}.swal2-popup.swal2-toast .swal2-success [class^=swal2-success-line]{height:.3125em}.swal2-popup.swal2-toast .swal2-success [class^=swal2-success-line][class$=tip]{top:1.125em;left:.1875em;width:.75em}.swal2-popup.swal2-toast .swal2-success [class^=swal2-success-line][class$=long]{top:.9375em;right:.1875em;width:1.375em}.swal2-popup.swal2-toast .swal2-success.swal2-icon-show .swal2-success-line-tip{-webkit-animation:swal2-toast-animate-success-line-tip .75s;animation:swal2-toast-animate-success-line-tip .75s}.swal2-popup.swal2-toast .swal2-success.swal2-icon-show .swal2-success-line-long{-webkit-animation:swal2-toast-animate-success-line-long .75s;animation:swal2-toast-animate-success-line-long .75s}.swal2-popup.swal2-toast.swal2-show{-webkit-animation:swal2-toast-show .5s;animation:swal2-toast-show .5s}.swal2-popup.swal2-toast.swal2-hide{-webkit-animation:swal2-toast-hide .1s forwards;animation:swal2-toast-hide .1s forwards}.swal2-container{display:grid;position:fixed;z-index:1060;top:0;right:0;bottom:0;left:0;box-sizing:border-box;grid-template-areas:"top-start     top            top-end" "center-start  center         center-end" "bottom-start  bottom-center  bottom-end";grid-template-rows:minmax(-webkit-min-content,auto) minmax(-webkit-min-content,auto) minmax(-webkit-min-content,auto);grid-template-rows:minmax(min-content,auto) minmax(min-content,auto) minmax(min-content,auto);height:100%;padding:.625em;overflow-x:hidden;transition:background-color .1s;-webkit-overflow-scrolling:touch}.swal2-container.swal2-backdrop-show,.swal2-container.swal2-noanimation{background:rgba(0,0,0,.4)}.swal2-container.swal2-backdrop-hide{background:0 0!important}.swal2-container.swal2-bottom-start,.swal2-container.swal2-center-start,.swal2-container.swal2-top-start{grid-template-columns:minmax(0,1fr) auto auto}.swal2-container.swal2-bottom,.swal2-container.swal2-center,.swal2-container.swal2-top{grid-template-columns:auto minmax(0,1fr) auto}.swal2-container.swal2-bottom-end,.swal2-container.swal2-center-end,.swal2-container.swal2-top-end{grid-template-columns:auto auto minmax(0,1fr)}.swal2-container.swal2-top-start>.swal2-popup{align-self:start}.swal2-container.swal2-top>.swal2-popup{grid-column:2;align-self:start;justify-self:center}.swal2-container.swal2-top-end>.swal2-popup,.swal2-container.swal2-top-right>.swal2-popup{grid-column:3;align-self:start;justify-self:end}.swal2-container.swal2-center-left>.swal2-popup,.swal2-container.swal2-center-start>.swal2-popup{grid-row:2;align-self:center}.swal2-container.swal2-center>.swal2-popup{grid-column:2;grid-row:2;align-self:center;justify-self:center}.swal2-container.swal2-center-end>.swal2-popup,.swal2-container.swal2-center-right>.swal2-popup{grid-column:3;grid-row:2;align-self:center;justify-self:end}.swal2-container.swal2-bottom-left>.swal2-popup,.swal2-container.swal2-bottom-start>.swal2-popup{grid-column:1;grid-row:3;align-self:end}.swal2-container.swal2-bottom>.swal2-popup{grid-column:2;grid-row:3;justify-self:center;align-self:end}.swal2-container.swal2-bottom-end>.swal2-popup,.swal2-container.swal2-bottom-right>.swal2-popup{grid-column:3;grid-row:3;align-self:end;justify-self:end}.swal2-container.swal2-grow-fullscreen>.swal2-popup,.swal2-container.swal2-grow-row>.swal2-popup{grid-column:1/4;width:100%}.swal2-container.swal2-grow-column>.swal2-popup,.swal2-container.swal2-grow-fullscreen>.swal2-popup{grid-row:1/4;align-self:stretch}.swal2-container.swal2-no-transition{transition:none!important}.swal2-popup{display:none;position:relative;box-sizing:border-box;grid-template-columns:minmax(0,100%);width:32em;max-width:100%;padding:0 0 1.25em;border:none;border-radius:5px;background:#fff;color:#545454;font-family:inherit;font-size:1rem}.swal2-popup:focus{outline:0}.swal2-popup.swal2-loading{overflow-y:hidden}.swal2-title{position:relative;max-width:100%;margin:0;padding:.8em 1em 0;color:inherit;font-size:1.875em;font-weight:600;text-align:center;text-transform:none;word-wrap:break-word}.swal2-actions{display:flex;z-index:1;box-sizing:border-box;flex-wrap:wrap;align-items:center;justify-content:center;width:auto;margin:1.25em auto 0;padding:0}.swal2-actions:not(.swal2-loading) .swal2-styled[disabled]{opacity:.4}.swal2-actions:not(.swal2-loading) .swal2-styled:hover{background-image:linear-gradient(rgba(0,0,0,.1),rgba(0,0,0,.1))}.swal2-actions:not(.swal2-loading) .swal2-styled:active{background-image:linear-gradient(rgba(0,0,0,.2),rgba(0,0,0,.2))}.swal2-loader{display:none;align-items:center;justify-content:center;width:2.2em;height:2.2em;margin:0 1.875em;-webkit-animation:swal2-rotate-loading 1.5s linear 0s infinite normal;animation:swal2-rotate-loading 1.5s linear 0s infinite normal;border-width:.25em;border-style:solid;border-radius:100%;border-color:#2778c4 transparent #2778c4 transparent}.swal2-styled{margin:.3125em;padding:.625em 1.1em;transition:box-shadow .1s;box-shadow:0 0 0 3px transparent;font-weight:500}.swal2-styled:not([disabled]){cursor:pointer}.swal2-styled.swal2-confirm{border:0;border-radius:.25em;background:initial;background-color:#7066e0;color:#fff;font-size:1em}.swal2-styled.swal2-confirm:focus{box-shadow:0 0 0 3px rgba(112,102,224,.5)}.swal2-styled.swal2-deny{border:0;border-radius:.25em;background:initial;background-color:#dc3741;color:#fff;font-size:1em}.swal2-styled.swal2-deny:focus{box-shadow:0 0 0 3px rgba(220,55,65,.5)}.swal2-styled.swal2-cancel{border:0;border-radius:.25em;background:initial;background-color:#6e7881;color:#fff;font-size:1em}.swal2-styled.swal2-cancel:focus{box-shadow:0 0 0 3px rgba(110,120,129,.5)}.swal2-styled.swal2-default-outline:focus{box-shadow:0 0 0 3px rgba(100,150,200,.5)}.swal2-styled:focus{outline:0}.swal2-styled::-moz-focus-inner{border:0}.swal2-footer{justify-content:center;margin:1em 0 0;padding:1em 1em 0;border-top:1px solid #eee;color:inherit;font-size:1em}.swal2-timer-progress-bar-container{position:absolute;right:0;bottom:0;left:0;grid-column:auto!important;overflow:hidden;border-bottom-right-radius:5px;border-bottom-left-radius:5px}.swal2-timer-progress-bar{width:100%;height:.25em;background:rgba(0,0,0,.2)}.swal2-image{max-width:100%;margin:2em auto 1em}.swal2-close{z-index:2;align-items:center;justify-content:center;width:1.2em;height:1.2em;margin-top:0;margin-right:0;margin-bottom:-1.2em;padding:0;overflow:hidden;transition:color .1s,box-shadow .1s;border:none;border-radius:5px;background:0 0;color:#ccc;font-family:serif;font-family:monospace;font-size:2.5em;cursor:pointer;justify-self:end}.swal2-close:hover{transform:none;background:0 0;color:#f27474}.swal2-close:focus{outline:0;box-shadow:inset 0 0 0 3px rgba(100,150,200,.5)}.swal2-close::-moz-focus-inner{border:0}.swal2-html-container{z-index:1;justify-content:center;margin:1em 1.6em .3em;padding:0;overflow:auto;color:inherit;font-size:1.125em;font-weight:400;line-height:normal;text-align:center;word-wrap:break-word;word-break:break-word}.swal2-checkbox,.swal2-file,.swal2-input,.swal2-radio,.swal2-select,.swal2-textarea{margin:1em 2em 3px}.swal2-file,.swal2-input,.swal2-textarea{box-sizing:border-box;width:auto;transition:border-color .1s,box-shadow .1s;border:1px solid #d9d9d9;border-radius:.1875em;background:0 0;box-shadow:inset 0 1px 1px rgba(0,0,0,.06),0 0 0 3px transparent;color:inherit;font-size:1.125em}.swal2-file.swal2-inputerror,.swal2-input.swal2-inputerror,.swal2-textarea.swal2-inputerror{border-color:#f27474!important;box-shadow:0 0 2px #f27474!important}.swal2-file:focus,.swal2-input:focus,.swal2-textarea:focus{border:1px solid #b4dbed;outline:0;box-shadow:inset 0 1px 1px rgba(0,0,0,.06),0 0 0 3px rgba(100,150,200,.5)}.swal2-file::-moz-placeholder,.swal2-input::-moz-placeholder,.swal2-textarea::-moz-placeholder{color:#ccc}.swal2-file:-ms-input-placeholder,.swal2-input:-ms-input-placeholder,.swal2-textarea:-ms-input-placeholder{color:#ccc}.swal2-file::placeholder,.swal2-input::placeholder,.swal2-textarea::placeholder{color:#ccc}.swal2-range{margin:1em 2em 3px;background:#fff}.swal2-range input{width:80%}.swal2-range output{width:20%;color:inherit;font-weight:600;text-align:center}.swal2-range input,.swal2-range output{height:2.625em;padding:0;font-size:1.125em;line-height:2.625em}.swal2-input{height:2.625em;padding:0 .75em}.swal2-file{width:75%;margin-right:auto;margin-left:auto;background:0 0;font-size:1.125em}.swal2-textarea{height:6.75em;padding:.75em}.swal2-select{min-width:50%;max-width:100%;padding:.375em .625em;background:0 0;color:inherit;font-size:1.125em}.swal2-checkbox,.swal2-radio{align-items:center;justify-content:center;background:#fff;color:inherit}.swal2-checkbox label,.swal2-radio label{margin:0 .6em;font-size:1.125em}.swal2-checkbox input,.swal2-radio input{flex-shrink:0;margin:0 .4em}.swal2-input-label{display:flex;justify-content:center;margin:1em auto 0}.swal2-validation-message{align-items:center;justify-content:center;margin:1em 0 0;padding:.625em;overflow:hidden;background:#f0f0f0;color:#666;font-size:1em;font-weight:300}.swal2-validation-message::before{content:"!";display:inline-block;width:1.5em;min-width:1.5em;height:1.5em;margin:0 .625em;border-radius:50%;background-color:#f27474;color:#fff;font-weight:600;line-height:1.5em;text-align:center}.swal2-icon{position:relative;box-sizing:content-box;justify-content:center;width:5em;height:5em;margin:2.5em auto .6em;border:.25em solid transparent;border-radius:50%;border-color:#000;font-family:inherit;line-height:5em;cursor:default;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.swal2-icon .swal2-icon-content{display:flex;align-items:center;font-size:3.75em}.swal2-icon.swal2-error{border-color:#f27474;color:#f27474}.swal2-icon.swal2-error .swal2-x-mark{position:relative;flex-grow:1}.swal2-icon.swal2-error [class^=swal2-x-mark-line]{display:block;position:absolute;top:2.3125em;width:2.9375em;height:.3125em;border-radius:.125em;background-color:#f27474}.swal2-icon.swal2-error [class^=swal2-x-mark-line][class$=left]{left:1.0625em;transform:rotate(45deg)}.swal2-icon.swal2-error [class^=swal2-x-mark-line][class$=right]{right:1em;transform:rotate(-45deg)}.swal2-icon.swal2-error.swal2-icon-show{-webkit-animation:swal2-animate-error-icon .5s;animation:swal2-animate-error-icon .5s}.swal2-icon.swal2-error.swal2-icon-show .swal2-x-mark{-webkit-animation:swal2-animate-error-x-mark .5s;animation:swal2-animate-error-x-mark .5s}.swal2-icon.swal2-warning{border-color:#facea8;color:#f8bb86}.swal2-icon.swal2-warning.swal2-icon-show{-webkit-animation:swal2-animate-error-icon .5s;animation:swal2-animate-error-icon .5s}.swal2-icon.swal2-warning.swal2-icon-show .swal2-icon-content{-webkit-animation:swal2-animate-i-mark .5s;animation:swal2-animate-i-mark .5s}.swal2-icon.swal2-info{border-color:#9de0f6;color:#3fc3ee}.swal2-icon.swal2-info.swal2-icon-show{-webkit-animation:swal2-animate-error-icon .5s;animation:swal2-animate-error-icon .5s}.swal2-icon.swal2-info.swal2-icon-show .swal2-icon-content{-webkit-animation:swal2-animate-i-mark .8s;animation:swal2-animate-i-mark .8s}.swal2-icon.swal2-question{border-color:#c9dae1;color:#87adbd}.swal2-icon.swal2-question.swal2-icon-show{-webkit-animation:swal2-animate-error-icon .5s;animation:swal2-animate-error-icon .5s}.swal2-icon.swal2-question.swal2-icon-show .swal2-icon-content{-webkit-animation:swal2-animate-question-mark .8s;animation:swal2-animate-question-mark .8s}.swal2-icon.swal2-success{border-color:#a5dc86;color:#a5dc86}.swal2-icon.swal2-success [class^=swal2-success-circular-line]{position:absolute;width:3.75em;height:7.5em;transform:rotate(45deg);border-radius:50%}.swal2-icon.swal2-success [class^=swal2-success-circular-line][class$=left]{top:-.4375em;left:-2.0635em;transform:rotate(-45deg);transform-origin:3.75em 3.75em;border-radius:7.5em 0 0 7.5em}.swal2-icon.swal2-success [class^=swal2-success-circular-line][class$=right]{top:-.6875em;left:1.875em;transform:rotate(-45deg);transform-origin:0 3.75em;border-radius:0 7.5em 7.5em 0}.swal2-icon.swal2-success .swal2-success-ring{position:absolute;z-index:2;top:-.25em;left:-.25em;box-sizing:content-box;width:100%;height:100%;border:.25em solid rgba(165,220,134,.3);border-radius:50%}.swal2-icon.swal2-success .swal2-success-fix{position:absolute;z-index:1;top:.5em;left:1.625em;width:.4375em;height:5.625em;transform:rotate(-45deg)}.swal2-icon.swal2-success [class^=swal2-success-line]{display:block;position:absolute;z-index:2;height:.3125em;border-radius:.125em;background-color:#a5dc86}.swal2-icon.swal2-success [class^=swal2-success-line][class$=tip]{top:2.875em;left:.8125em;width:1.5625em;transform:rotate(45deg)}.swal2-icon.swal2-success [class^=swal2-success-line][class$=long]{top:2.375em;right:.5em;width:2.9375em;transform:rotate(-45deg)}.swal2-icon.swal2-success.swal2-icon-show .swal2-success-line-tip{-webkit-animation:swal2-animate-success-line-tip .75s;animation:swal2-animate-success-line-tip .75s}.swal2-icon.swal2-success.swal2-icon-show .swal2-success-line-long{-webkit-animation:swal2-animate-success-line-long .75s;animation:swal2-animate-success-line-long .75s}.swal2-icon.swal2-success.swal2-icon-show .swal2-success-circular-line-right{-webkit-animation:swal2-rotate-success-circular-line 4.25s ease-in;animation:swal2-rotate-success-circular-line 4.25s ease-in}.swal2-progress-steps{flex-wrap:wrap;align-items:center;max-width:100%;margin:1.25em auto;padding:0;background:0 0;font-weight:600}.swal2-progress-steps li{display:inline-block;position:relative}.swal2-progress-steps .swal2-progress-step{z-index:20;flex-shrink:0;width:2em;height:2em;border-radius:2em;background:#2778c4;color:#fff;line-height:2em;text-align:center}.swal2-progress-steps .swal2-progress-step.swal2-active-progress-step{background:#2778c4}.swal2-progress-steps .swal2-progress-step.swal2-active-progress-step~.swal2-progress-step{background:#add8e6;color:#fff}.swal2-progress-steps .swal2-progress-step.swal2-active-progress-step~.swal2-progress-step-line{background:#add8e6}.swal2-progress-steps .swal2-progress-step-line{z-index:10;flex-shrink:0;width:2.5em;height:.4em;margin:0 -1px;background:#2778c4}[class^=swal2]{-webkit-tap-highlight-color:transparent}.swal2-show{-webkit-animation:swal2-show .3s;animation:swal2-show .3s}.swal2-hide{-webkit-animation:swal2-hide .15s forwards;animation:swal2-hide .15s forwards}.swal2-noanimation{transition:none}.swal2-scrollbar-measure{position:absolute;top:-9999px;width:50px;height:50px;overflow:scroll}.swal2-rtl .swal2-close{margin-right:initial;margin-left:0}.swal2-rtl .swal2-timer-progress-bar{right:0;left:auto}.swal2-no-war{display:flex;position:fixed;z-index:1061;top:0;left:0;align-items:center;justify-content:center;width:100%;height:3.375em;background:#20232a;color:#fff;text-align:center}.swal2-no-war a{color:#61dafb;text-decoration:none}.swal2-no-war a:hover{text-decoration:underline}@-webkit-keyframes swal2-toast-show{0%{transform:translateY(-.625em) rotateZ(2deg)}33%{transform:translateY(0) rotateZ(-2deg)}66%{transform:translateY(.3125em) rotateZ(2deg)}100%{transform:translateY(0) rotateZ(0)}}@keyframes swal2-toast-show{0%{transform:translateY(-.625em) rotateZ(2deg)}33%{transform:translateY(0) rotateZ(-2deg)}66%{transform:translateY(.3125em) rotateZ(2deg)}100%{transform:translateY(0) rotateZ(0)}}@-webkit-keyframes swal2-toast-hide{100%{transform:rotateZ(1deg);opacity:0}}@keyframes swal2-toast-hide{100%{transform:rotateZ(1deg);opacity:0}}@-webkit-keyframes swal2-toast-animate-success-line-tip{0%{top:.5625em;left:.0625em;width:0}54%{top:.125em;left:.125em;width:0}70%{top:.625em;left:-.25em;width:1.625em}84%{top:1.0625em;left:.75em;width:.5em}100%{top:1.125em;left:.1875em;width:.75em}}@keyframes swal2-toast-animate-success-line-tip{0%{top:.5625em;left:.0625em;width:0}54%{top:.125em;left:.125em;width:0}70%{top:.625em;left:-.25em;width:1.625em}84%{top:1.0625em;left:.75em;width:.5em}100%{top:1.125em;left:.1875em;width:.75em}}@-webkit-keyframes swal2-toast-animate-success-line-long{0%{top:1.625em;right:1.375em;width:0}65%{top:1.25em;right:.9375em;width:0}84%{top:.9375em;right:0;width:1.125em}100%{top:.9375em;right:.1875em;width:1.375em}}@keyframes swal2-toast-animate-success-line-long{0%{top:1.625em;right:1.375em;width:0}65%{top:1.25em;right:.9375em;width:0}84%{top:.9375em;right:0;width:1.125em}100%{top:.9375em;right:.1875em;width:1.375em}}@-webkit-keyframes swal2-show{0%{transform:scale(.7)}45%{transform:scale(1.05)}80%{transform:scale(.95)}100%{transform:scale(1)}}@keyframes swal2-show{0%{transform:scale(.7)}45%{transform:scale(1.05)}80%{transform:scale(.95)}100%{transform:scale(1)}}@-webkit-keyframes swal2-hide{0%{transform:scale(1);opacity:1}100%{transform:scale(.5);opacity:0}}@keyframes swal2-hide{0%{transform:scale(1);opacity:1}100%{transform:scale(.5);opacity:0}}@-webkit-keyframes swal2-animate-success-line-tip{0%{top:1.1875em;left:.0625em;width:0}54%{top:1.0625em;left:.125em;width:0}70%{top:2.1875em;left:-.375em;width:3.125em}84%{top:3em;left:1.3125em;width:1.0625em}100%{top:2.8125em;left:.8125em;width:1.5625em}}@keyframes swal2-animate-success-line-tip{0%{top:1.1875em;left:.0625em;width:0}54%{top:1.0625em;left:.125em;width:0}70%{top:2.1875em;left:-.375em;width:3.125em}84%{top:3em;left:1.3125em;width:1.0625em}100%{top:2.8125em;left:.8125em;width:1.5625em}}@-webkit-keyframes swal2-animate-success-line-long{0%{top:3.375em;right:2.875em;width:0}65%{top:3.375em;right:2.875em;width:0}84%{top:2.1875em;right:0;width:3.4375em}100%{top:2.375em;right:.5em;width:2.9375em}}@keyframes swal2-animate-success-line-long{0%{top:3.375em;right:2.875em;width:0}65%{top:3.375em;right:2.875em;width:0}84%{top:2.1875em;right:0;width:3.4375em}100%{top:2.375em;right:.5em;width:2.9375em}}@-webkit-keyframes swal2-rotate-success-circular-line{0%{transform:rotate(-45deg)}5%{transform:rotate(-45deg)}12%{transform:rotate(-405deg)}100%{transform:rotate(-405deg)}}@keyframes swal2-rotate-success-circular-line{0%{transform:rotate(-45deg)}5%{transform:rotate(-45deg)}12%{transform:rotate(-405deg)}100%{transform:rotate(-405deg)}}@-webkit-keyframes swal2-animate-error-x-mark{0%{margin-top:1.625em;transform:scale(.4);opacity:0}50%{margin-top:1.625em;transform:scale(.4);opacity:0}80%{margin-top:-.375em;transform:scale(1.15)}100%{margin-top:0;transform:scale(1);opacity:1}}@keyframes swal2-animate-error-x-mark{0%{margin-top:1.625em;transform:scale(.4);opacity:0}50%{margin-top:1.625em;transform:scale(.4);opacity:0}80%{margin-top:-.375em;transform:scale(1.15)}100%{margin-top:0;transform:scale(1);opacity:1}}@-webkit-keyframes swal2-animate-error-icon{0%{transform:rotateX(100deg);opacity:0}100%{transform:rotateX(0);opacity:1}}@keyframes swal2-animate-error-icon{0%{transform:rotateX(100deg);opacity:0}100%{transform:rotateX(0);opacity:1}}@-webkit-keyframes swal2-rotate-loading{0%{transform:rotate(0)}100%{transform:rotate(360deg)}}@keyframes swal2-rotate-loading{0%{transform:rotate(0)}100%{transform:rotate(360deg)}}@-webkit-keyframes swal2-animate-question-mark{0%{transform:rotateY(-360deg)}100%{transform:rotateY(0)}}@keyframes swal2-animate-question-mark{0%{transform:rotateY(-360deg)}100%{transform:rotateY(0)}}@-webkit-keyframes swal2-animate-i-mark{0%{transform:rotateZ(45deg);opacity:0}25%{transform:rotateZ(-25deg);opacity:.4}50%{transform:rotateZ(15deg);opacity:.8}75%{transform:rotateZ(-5deg);opacity:1}100%{transform:rotateX(0);opacity:1}}@keyframes swal2-animate-i-mark{0%{transform:rotateZ(45deg);opacity:0}25%{transform:rotateZ(-25deg);opacity:.4}50%{transform:rotateZ(15deg);opacity:.8}75%{transform:rotateZ(-5deg);opacity:1}100%{transform:rotateX(0);opacity:1}}body.swal2-shown:not(.swal2-no-backdrop):not(.swal2-toast-shown){overflow:hidden}body.swal2-height-auto{height:auto!important}body.swal2-no-backdrop .swal2-container{background-color:transparent!important;pointer-events:none}body.swal2-no-backdrop .swal2-container .swal2-popup{pointer-events:all}body.swal2-no-backdrop .swal2-container .swal2-modal{box-shadow:0 0 10px rgba(0,0,0,.4)}@media print{body.swal2-shown:not(.swal2-no-backdrop):not(.swal2-toast-shown){overflow-y:scroll!important}body.swal2-shown:not(.swal2-no-backdrop):not(.swal2-toast-shown)>[aria-hidden=true]{display:none}body.swal2-shown:not(.swal2-no-backdrop):not(.swal2-toast-shown) .swal2-container{position:static!important}}body.swal2-toast-shown .swal2-container{box-sizing:border-box;width:360px;max-width:100%;background-color:transparent;pointer-events:none}body.swal2-toast-shown .swal2-container.swal2-top{top:0;right:auto;bottom:auto;left:50%;transform:translateX(-50%)}body.swal2-toast-shown .swal2-container.swal2-top-end,body.swal2-toast-shown .swal2-container.swal2-top-right{top:0;right:0;bottom:auto;left:auto}body.swal2-toast-shown .swal2-container.swal2-top-left,body.swal2-toast-shown .swal2-container.swal2-top-start{top:0;right:auto;bottom:auto;left:0}body.swal2-toast-shown .swal2-container.swal2-center-left,body.swal2-toast-shown .swal2-container.swal2-center-start{top:50%;right:auto;bottom:auto;left:0;transform:translateY(-50%)}body.swal2-toast-shown .swal2-container.swal2-center{top:50%;right:auto;bottom:auto;left:50%;transform:translate(-50%,-50%)}body.swal2-toast-shown .swal2-container.swal2-center-end,body.swal2-toast-shown .swal2-container.swal2-center-right{top:50%;right:0;bottom:auto;left:auto;transform:translateY(-50%)}body.swal2-toast-shown .swal2-container.swal2-bottom-left,body.swal2-toast-shown .swal2-container.swal2-bottom-start{top:auto;right:auto;bottom:0;left:0}body.swal2-toast-shown .swal2-container.swal2-bottom{top:auto;right:auto;bottom:0;left:50%;transform:translateX(-50%)}body.swal2-toast-shown .swal2-container.swal2-bottom-end,body.swal2-toast-shown .swal2-container.swal2-bottom-right{top:auto;right:0;bottom:0;left:auto}')},426:(e,t,n)=>{"use strict";n.d(t,{Z:()=>w});var o=n(537),a=n.n(o),i=n(645),s=n.n(i),r=n(667),l=n.n(r),c=new URL(n(265),n.b),d=new URL(n(239),n.b),A=new URL(n(374),n.b),p=new URL(n(118),n.b),u=s()(a()),m=l()(c),f=l()(d),g=l()(A),h=l()(p);u.push([e.id,"/*-----GLOBAL DECLARATIONS-----*/\n\n*,\n*::after,\n*::before {\n    box-sizing: border-box;\n    padding: 0;\n    margin: 0;\n}\n\n@font-face {\n    font-family: 'MyLogoFont';\n    src: url("+m+");\n    font-weight: 600;\n    font-style: normal;\n}\n\n@font-face {\n    font-family: 'vecteezyFont';\n    src: url("+f+");\n    font-style: normal;\n}\n\n@font-face {\n    font-family: 'copyrightFont';\n    src: url("+g+");\n    font-style: normal;\n}\n\n@font-face {\n    font-family: 'SidebarHeading';\n    src: url("+h+");\n    font-weight: 600;\n    font-style: normal;\n}\n\nbody {\n    display: flex;\n    flex-direction: column;\n    justify-items: space-between;\n    justify-content: space-between;\n    font-family: 'copyrightFont';\n}\n\n/*------HEADER DIV------*/\n\n.header {\n    display: flex;\n    justify-items:space-between;\n    justify-content: space-between;\n    align-items: center;\n    gap: 40px;\n    border-bottom: 1px solid gray;\n    box-shadow: rgba(0, 0, 0, 0.45) 0px 25px 20px -20px;\n    padding-left: 20px;\n    padding-right: 20px;\n}\n\n.show-project-nav {\n    display: none;\n    border: none;\n    color: inherit;\n    font-family: inherit;\n    font-size: inherit;\n    outline: none;\n    width: 60px;\n    font-size: 40px;\n    cursor: pointer;\n    padding: 0;\n    border-radius: 5px;\n}\n\n.logo-div {\n    display: flex;\n    align-items: center;\n}\n\n.logo-img {\n    width: 100px;\n    height: auto;\n}\n\n.logo-caption {\n    font-family: 'MyLogoFont';\n    font-size: 80px;\n    margin-top: 10px;\n}\n\n.logo-caption span {\n    color:rgba(75, 201, 201, 0.764);\n}\n\n.logo-copyright {\n    align-self: flex-end;\n    font-family: 'copyrightFont';\n    font-size: 20px;\n    margin-bottom: 20px;\n}\n\na[href=\"https://vecteezy.com\"] {\n    font-family: 'vecteezyFont';\n    color:darkorange;\n    text-decoration: none;\n}\n\na[href=\"https://vecteezy.com\"]:link { \n    text-decoration: none;\n}\n  \na[href=\"https://vecteezy.com\"]:visited { \n    text-decoration: none; \n}\n  \na[href=\"https://vecteezy.com\"]:hover { \n    text-decoration: none; \n    color:rgba(75, 201, 201, 0.764);\n}\n  \na[href=\"https://vecteezy.com\"]:active { \n    text-decoration: none;\n}\n\n/*-----MAIN DIV-----*/\n\n.main {\n    display: grid;\n    grid-template-columns: 2fr 5fr;\n    min-height: calc(102vh - 104px - 48px);\n}\n\n/*------Sidebar Div-----*/\n\n.sidebar,\n.sidebar.active {\n    display: flex;\n    flex-direction: column;\n    justify-content: flex-start;\n    align-items: center;\n    background-color: rgba(128, 128, 128, 0.591);\n    min-width: 250px;\n    padding-top: 20px;\n    padding-bottom: 20px;\n    gap: 40px;\n    z-index: 1;\n}\n\n.newly-created-projects {\n    display: flex;\n    flex-direction: column;\n    justify-items: space-between;\n}\n\n.newly-created-projects-heading {\n    font-family: 'SidebarHeading';\n    text-align: center;\n}\n\n.newly-created-projects-list {\n    padding: 1rem 0;\n    font-size: 1.5rem;\n}\n\n.newly-created-projects-list li {\n    list-style: none;\n    padding: 1rem;\n    transition: 0.3s ease;\n    cursor: pointer;\n    font-family: 'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS', sans-serif;\n    min-width: 200px;\n}\n\n.newly-created-projects-list li:hover {\n    background: white;\n    border-radius: 0.4rem;\n    font-weight: 500;\n    color: black;\n}\n\n.newly-created-projects-list li.active {\n    font-weight: bolder;\n    color: white;\n    background: black;\n    border-radius: 0.4rem;\n}\n  \n.icon-btn {\n    width: 50px;\n    height: 50px;\n    border: 1px solid #cdcdcd;\n    background: white;\n    border-radius: 25px;\n    overflow: hidden;\n    position: relative;\n    transition: width 0.2s ease-in-out;\n    font-weight: 500;\n    font-family: 'vecteezyFont';\n    cursor: pointer;\n}\n  \n.add-btn:hover {\n    width: 120px;\n}\n  \n.add-btn::before,\n.add-btn::after {\n    transition: width 0.2s ease-in-out, border-radius 0.2s ease-in-out;\n    content: \"\";\n    position: absolute;\n    height: 4px;\n    width: 10px;\n    top: calc(50% - 2px);\n    background-color: seagreen;\n}\n  \n.add-btn::after {\n    right: 14px;\n    overflow: hidden;\n    border-top-right-radius: 2px;\n    border-bottom-right-radius: 2px;\n}\n  \n.add-btn::before {\n    left: 14px;\n    border-top-left-radius: 2px;\n    border-bottom-left-radius: 2px;\n}\n  \n.icon-btn:focus {\n    outline: none;\n}\n  \n.btn-txt {\n    opacity: 0;\n    transition: opacity 0.2s;\n}\n  \n.add-btn:hover::before,\n.add-btn:hover::after {\n    width: 4px;\n    border-radius: 2px;\n}\n  \n.add-btn:hover .btn-txt {\n    opacity: 1;\n}\n  \n.add-icon::after,\n.add-icon::before {\n    transition: all 0.2s ease-in-out;\n    content: \"\";\n    position: absolute;\n    height: 20px;\n    width: 2px;\n    top: calc(50% - 10px);\n    background-color:seagreen;\n    overflow: hidden;\n}\n  \n.add-icon::before {\n    left: 22px;\n    border-top-left-radius: 2px;\n    border-bottom-left-radius: 2px;\n}\n  \n.add-icon::after {\n    right: 22px;\n    border-top-right-radius: 2px;\n    border-bottom-right-radius: 2px;\n}\n  \n.add-btn:hover .add-icon::before {\n    left: 15px;\n    height: 4px;\n    top: calc(50% - 2px);\n}\n  \n.add-btn:hover .add-icon::after {\n    right: 15px;\n    height: 4px;\n    top: calc(50% - 2px);\n}\n\n.delete-project-button {\n    position: relative;\n    overflow: hidden;\n    border: 1px solid white;\n    border-radius: 50%;\n    color: #18181a;\n    display: inline-block;\n    font-size: 13px;\n    line-height: 15px;\n    padding: 18px 18px 18px;\n    text-decoration: none;\n    cursor: pointer;\n    background: #fff;\n    user-select: none;\n    -webkit-user-select: none;\n    touch-action: manipulation;\n}\n\n.delete-project-button span:first-child {\n    position: relative;\n    color:crimson;\n    transition: color 600ms cubic-bezier(0.48, 0, 0.12, 1);\n    z-index: 10;\n    font-size: 25px;\n    font-weight: 800;\n}\n\n.delete-project-button span:last-child {\n    color: white;\n    display: block;\n    position: absolute;\n    bottom: 0;\n    transition: all 500ms cubic-bezier(0.48, 0, 0.12, 1);\n    z-index: 100;\n    opacity: 0;\n    top: 50%;\n    left: 50%;\n    transform: translateY(225%) translateX(-50%);\n    height: 10px;\n    line-height: 15px;\n}\n  \n.delete-project-button:after{\n    content: \"\";\n    position: absolute;\n    bottom: -50%;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    background-color: black;\n    transform-origin: bottom center;\n    transition: transform 600ms cubic-bezier(0.48, 0, 0.12, 1);\n    transform: skewY(9.3deg) scaleY(0);\n    z-index: 50;\n}\n  \n.delete-project-button:hover:after {\n    transform-origin: bottom center;\n    transform: skewY(9.3deg) scaleY(2);\n}\n  \n.delete-project-button:hover span:last-child {\n    transform: translateX(-50%) translateY(-100%);\n    opacity: 1;\n    transition: all 900ms cubic-bezier(0.48, 0, 0.12, 1);\n}\n\n/*------Tasks List Div-----*/\n\n.tasks-container {\n    position: relative;\n    display: flex;\n    flex-direction: column;\n    padding: 36px 18px;\n    justify-content: flex-start;\n    align-items: center;\n}\n\n.search-box {\n    position: absolute;\n    top: 11.2%;\n    left: 50%;\n    align-self: center;\n    transform: translate(-50%, -50%);\n    height: 60px;\n    background: #353535;\n    line-height: 40px;\n    padding: 10px;\n    border-radius: 60px;\n    cursor: pointer;\n}\n\n.search-input {\n    background-color: #353535;\n    color: #fff;\n    outline: none;\n    border: none;\n    line-height: 40px;\n    width: 0px;\n    float: left;\n    font-size: 1em;\n    transition: 0.7s ease;\n}\n\n.search-btn {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    text-decoration: none;\n    background: #353535;\n    padding: 12px;\n    border-radius: 50%;\n    float: right;\n    color:#22ffc0;\n    transition: 0.4s ease;\n}\n\n.search-box:hover > .search-input,\n.search-input:focus {\n    width: calc(18vw);\n    margin: 0px 8px;\n}\n\n.search-box:hover > .search-btn,\n.search-input:focus + .search-btn {\n    background: #22ffc0;\n    color: #101010;\n}\n\n.task-buttons {\n    display: flex;\n    justify-items: space-around;\n    align-items: center;\n    gap: calc(47vw - 50px);\n}\n\n.add-task-button {\n    position: relative;\n    overflow: hidden;\n    border: 1px solid #18181a;\n    color: green;\n    display: inline-block;\n    font-size: 15px;\n    line-height: 15px;\n    padding: 18px 18px 17px;\n    text-decoration: none;\n    cursor: pointer;\n    background: #fff;\n    user-select: none;\n    -webkit-user-select: none;\n    touch-action: manipulation;\n}\n\n.delete-completed-tasks-button {\n    position: relative;\n    overflow: hidden;\n    border: 1px solid #18181a;\n    color: red;\n    display: inline-block;\n    font-size: 10px;\n    line-height: 15px;\n    padding: 18px 18px 17px;\n    text-decoration: none;\n    cursor: pointer;\n    background: #fff;\n    user-select: none;\n    -webkit-user-select: none;\n    touch-action: manipulation;\n}\n  \n.add-task-button span:first-child {\n    position: relative;\n    transition: color 600ms cubic-bezier(0.48, 0, 0.12, 1);\n    z-index: 10;\n    font-size: 35px;\n    font-weight: 800;\n}\n\n.delete-completed-tasks-button span:first-child {\n    position: relative;\n    transition: color 600ms cubic-bezier(0.48, 0, 0.12, 1);\n    z-index: 10;\n    font-size: 25px;\n    font-weight: 800;\n}\n\n.add-task-button span:last-child,\n.delete-completed-tasks-button span:last-child {\n    color: white;\n    display: block;\n    position: absolute;\n    bottom: 0;\n    transition: all 500ms cubic-bezier(0.48, 0, 0.12, 1);\n    z-index: 100;\n    opacity: 0;\n    top: 50%;\n    left: 50%;\n    transform: translateY(225%) translateX(-50%);\n    height: 14px;\n    line-height: 13px;\n}\n  \n.add-task-button:after,\n.delete-completed-tasks-button:after  {\n    content: \"\";\n    position: absolute;\n    bottom: -50%;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    background-color: black;\n    transform-origin: bottom center;\n    transition: transform 600ms cubic-bezier(0.48, 0, 0.12, 1);\n    transform: skewY(9.3deg) scaleY(0);\n    z-index: 50;\n}\n\n.add-task-button:hover:after,\n.delete-completed-tasks-button:hover:after {\n    transform-origin: bottom center;\n    transform: skewY(9.3deg) scaleY(2);\n  }\n  \n.add-task-button:hover span:last-child,\n.delete-completed-tasks-button:hover span:last-child {\n    transform: translateX(-50%) translateY(-100%);\n    opacity: 1;\n    transition: all 900ms cubic-bezier(0.48, 0, 0.12, 1);\n}\n\n.add-task-modal-input,\n.edit-task-modal-input,\ninput[type=\"date\"],\nselect {\n    padding: 0.5rem 0;\n    margin: 1rem 0;\n    border: none;\n    outline: none;\n    border-bottom: 2px solid dodgerblue;\n    resize: none;\n    font-family:'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS', sans-serif;\n}\n\n.add-task-modal-date,\n.add-task-modal-priority,\n.edit-task-modal-date,\n.edit-task-modal-priority {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    gap: 10px;\n}\n\ntextarea::placeholder {\n    line-height: 45px;\n}\n\ninput[value='Add Task'],\ninput[value='Save'] {\n    align-self: center;\n    background:dodgerblue;\n    border: 1px solid dodgerblue;\n    border-radius: 6px;\n    box-shadow: rgba(0, 0, 0, 0.1) 1px 2px 4px;\n    box-sizing: border-box;\n    color: #FFFFFF;\n    cursor: pointer;\n    display: inline-block;\n    font-family: \"proxima nova\", sans-serif;\n    font-size: 16px;\n    font-weight: 800;\n    line-height: 16px;\n    min-height: 40px;\n    outline: 0;\n    padding: 12px 14px;\n    text-align: center;\n    text-rendering: geometricprecision;\n    text-transform: none;\n    user-select: none;\n    -webkit-user-select: none;\n    touch-action: manipulation;\n    vertical-align: middle;\n}\n\ninput[value='Add Task']:hover,\ninput[value='Add Task']:active,\ninput[value='Save']:hover,\ninput[value='Save']:active {\n    background-color: initial;\n    background-position: 0 0;\n    color: dodgerblue;\n}\n\ninput[value='Add Task']:active,\ninput[value='Save']:active {\n    opacity: .8;\n}\n\n.tasks {\n    display: flex;\n    flex-direction: column;\n    align-items: flex-start;\n    font-family:'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS', sans-serif;\n    padding: 10px;\n    margin-top: 20px;\n}\n\n.task-heading-div {\n    display: flex;\n    justify-content: space-between;\n    align-items: flex-end;\n    width: calc(60vw - 50px);\n    padding-bottom: 10px;\n    border-bottom: 3px solid rgba(75, 201, 201, 0.764);\n}\n\n.tasks-title {\n    font-size: 30px;\n}\n\n.tasks-list {\n    display: flex;\n    flex-direction: column;\n    align-items: flex-start;\n    padding-top: 10px;\n}\n\n.task-card {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    width: calc(60vw - 50px);\n    padding: 20px;\n    border-bottom: 1px solid gray;\n}\n\n.task-card:nth-child(odd) {\n    background: #dbdada84;\n}\n\n.task-card:hover {\n    background-color: #cdcdcdf4;\n}\n\n.flex-1 {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    gap: 10px;\n}\n\n.flex-2 {\n    display: flex;\n    justify-content: flex-start;\n    align-items: center;\n    gap: 10px;\n}\n\ninput[type=\"checkbox\"] {\n    appearance: none;\n    background-color: #fff;\n    margin: 0;\n    font: inherit;\n    color: currentColor;\n    width: 1.15em;\n    height: 1.15em;\n    border: 0.15em solid currentColor;\n    border-radius: 0.15em;\n    transform: translateY(-0.075em);\n    display: grid;\n    place-content: center;\n    cursor: pointer;\n}\n\ninput[type=\"checkbox\"]::before {\n    content: \"\";\n    width: 0.65em;\n    height: 0.65em;\n    transform: scale(0);\n    transition: 120ms transform ease-in-out;\n    box-shadow: inset 1em 1em purple;\n    transform-origin: bottom left;\n    clip-path: polygon(14% 44%, 0 65%, 50% 100%, 100% 16%, 80% 0%, 43% 62%);\n}\n\ninput[type=\"checkbox\"]:checked::before {\n    transform: scale(1);\n}\n\ninput[type=\"checkbox\"]:checked + label {\n    opacity: 0.3;\n    text-decoration: line-through;\n}\n\ninput[type=\"checkbox\"]:focus {\n    outline: max(2px, 0.15em) solid currentColor;\n    outline-offset: max(2px, 0.15em);\n}\n\n.fa-pen-to-square {\n    cursor: pointer;\n}\n\n.fa-pen-to-square:hover {\n    filter: invert(52%) sepia(28%) saturate(7139%) hue-rotate(191deg) brightness(99%) contrast(104%);\n}\n\n.fa-up-right-and-down-left-from-center {\n    cursor: pointer;\n}\n\n.fa-up-right-and-down-left-from-center:hover {\n    filter: invert(89%) sepia(14%) saturate(1336%) hue-rotate(60deg) brightness(99%) contrast(88%);\n}\n\n.fa-trash {\n    cursor: pointer;\n}\n\n.fa-trash:hover {\n    filter: invert(18%) sepia(89%) saturate(7337%) hue-rotate(2deg) brightness(93%) contrast(120%);\n}\n\n/*-----FOOTER DIV-----*/\n\n.footer {\n    font-family: 'copyrightFont';\n    font-size: 15px;\n    font-weight: 800;\n    text-align: center;\n    padding: 10px;\n    background-color:rgba(75, 201, 201, 0.764);\n}\n  \n.footer a:link { \n    text-decoration: none; \n    color: black;\n}\n  \n.footer a:visited { \n    text-decoration: none; \n    color: black;\n}\n  \n.footer a:hover { \n    text-decoration: none; \n    color: orangered;\n}\n  \n.footer a:active { \n    text-decoration: none; \n    color: black;\n}\n\n/*-----HIDDEN PARTS-----*/\n\n/*--Overlay Window--*/\n\n.overlay-window {\n    display: none; /*invisible when inactive*/\n    position: absolute; /*the div will be fixed even if mouse scrolled down*/\n    top: 0; /*exact place of the div*/\n    left: 0; /*exact place of the div*/\n    width: 100%;\n    height: 100%;\n    background-color:dimgray;\n    opacity: 0.8;\n}\n\n.overlay-window.active {\n    display: block;\n}\n\n/*--Add New Project or Open Task Info Modal--*/\n\n.add-project-modal,\n.task-info-modal {\n    position: fixed;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content:flex-start; /*the div will be fixed even if mouse scrolled down*/\n    width: 400px;\n    height: 400px;\n    gap: 80px;\n    z-index: 1; /*the div will be in front of the overlayWindow*/\n    top: 50%; /*exact place of the div*/\n    left: 50%; /*exact place of the div*/\n    padding: 50px;\n    border-radius: 10px;\n    background-color: whitesmoke;\n    font-family:'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS', sans-serif;\n    user-select: none;\n    transform: translate(-50%, -50%) scale(0); /*will be animated*/\n    transition: 200ms ease-in-out;\n    box-shadow: 0 0 50px rgba(0, 0, 0, 0.5);\n}\n\n.task-info-modal {\n   height: 450px !important;\n   font-size: 20px;\n}\n\n.add-project-modal-heading,\n.task-info-modal-heading {\n    font-size: 30px;\n}\n\n.add-project-modal-form{\n    align-self: flex-start;\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n    gap: 60px;\n    position: relative;\n}\n\n.task-info-modal-text {\n    align-self: flex-start;\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n    gap: 20px;\n    position: relative;\n}\n\n.add-project-modal-input {\n    padding: 0.5rem 0;\n    margin: 1rem 0;\n    border: none;\n    outline: none;\n    border-bottom: 2px solid dodgerblue;\n    width: 220%;\n    resize: none;\n    font-family:'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS', sans-serif;\n    background-color: whitesmoke;\n}\n\n.add-project-modal-form > input[type=\"submit\"] {\n    position: absolute;\n    left: 70%;\n    top: 200%;\n    background:dodgerblue;\n    border: 1px solid dodgerblue;\n    border-radius: 6px;\n    box-shadow: rgba(0, 0, 0, 0.1) 1px 2px 4px;\n    box-sizing: border-box;\n    color: #FFFFFF;\n    cursor: pointer;\n    display: inline-block;\n    font-family: \"proxima nova\",sans-serif;\n    font-size: 16px;\n    font-weight: 800;\n    line-height: 16px;\n    min-height: 40px;\n    outline: 0;\n    padding: 12px 14px;\n    text-align: center;\n    text-rendering: geometricprecision;\n    text-transform: none;\n    user-select: none;\n    -webkit-user-select: none;\n    touch-action: manipulation;\n    vertical-align: middle;\n}\n  \n.add-project-modal-form > input[type=\"submit\"]:hover,\n.add-project-modal-form > input[type=\"submit\"]:active {\n    background-color: initial;\n    background-position: 0 0;\n    color: dodgerblue;\n}\n  \n.add-project-modal-form > input[type=\"submit\"]:active {\n    opacity: .8;\n}\n\n/*--Add a new Task or Edit Existing Task Modal--*/\n\n.add-task-modal,\n.edit-task-modal {\n    position: fixed;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content:flex-start; /*the div will be fixed even if mouse scrolled down*/\n    gap: 40px;\n    width: 1000px;\n    height: 250px;\n    z-index: 1; /*the div will be in front of the overlayWindow*/\n    top: 50%; /*exact place of the div*/\n    left: 50%; /*exact place of the div*/\n    padding: 30px;\n    border-radius: 10px;\n    background-color: whitesmoke;\n    font-family:'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS', sans-serif;\n    user-select: none;\n    transform: translate(-50%, -50%) scale(0); /*will be animated*/\n    transition: 200ms ease-in-out;\n    box-shadow: 0 0 50px rgba(0, 0, 0, 0.5);\n}\n\n.add-task-modal-heading,\n.edit-task-modal-heading {\n    font-size: 30px;\n}\n\n.add-task-modal-form,\n.edit-task-modal-form {\n    display: flex;\n    justify-content: space-between;\n    align-items: flex-end;\n    font-family:'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS', sans-serif;\n    top: 20%;\n    left: 10%;\n    padding: 10px;\n    gap: 50px;\n}\n\n.add-task-modal-input,\n.edit-task-modal-input,\n.add-task-modal-date-input,\n.edit-task-modal-date-input,\n.add-task-modal-priority > select,\n.edit-task-modal-priority > select {\n    background-color: whitesmoke;\n}\n\n.add-project-modal.active,\n.add-task-modal.active,\n.edit-task-modal.active,\n.task-info-modal.active {\n    transform: translate(-50%, -50%) scale(1);\n}\n\n/*-----MOBILE OR APP DECLARATIONS-----*/\n\n@media (max-width: 650px) {\n\n    .header {\n        justify-items:center;\n        justify-content: center;\n    }\n\n    .show-project-nav {\n        display: block;\n    }\n\n    .logo-caption {\n        font-size: 40px;\n    }\n\n    .logo-copyright {\n        display: none;\n    }\n  \n    .main {\n        display: flex;\n        flex-direction: column;\n        align-items: center;\n        min-height: calc(150vh - 104px - 48px);\n        gap: 50px;\n    }\n  \n    .sidebar {\n        width: 100%;\n        display: none;\n    }\n\n    .tasks-container {\n        width: 100%;\n        margin-top: 10px;\n    }\n\n    .task-buttons {\n        gap: calc(57vw - 50px);\n    }\n\n    .search-box {\n        top:17%;\n    }\n\n    .task-heading-div {\n        width: calc(75vw);\n    }\n\n    .task-card {\n        gap: 70px;\n        width: calc(75vw);\n    }\n\n    .add-task-modal,\n    .edit-task-modal { \n        width: 300px;\n        height: 600px;\n    }\n\n    .add-task-modal-form,\n    .edit-task-modal-form {\n        flex-direction: column;\n        align-items: center;\n        gap: 20px;\n    }\n\n}","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA,gCAAgC;;AAEhC;;;IAGI,sBAAsB;IACtB,UAAU;IACV,SAAS;AACb;;AAEA;IACI,yBAAyB;IACzB,4CAAwC;IACxC,gBAAgB;IAChB,kBAAkB;AACtB;;AAEA;IACI,2BAA2B;IAC3B,4CAA4C;IAC5C,kBAAkB;AACtB;;AAEA;IACI,4BAA4B;IAC5B,4CAAmD;IACnD,kBAAkB;AACtB;;AAEA;IACI,6BAA6B;IAC7B,4CAAwC;IACxC,gBAAgB;IAChB,kBAAkB;AACtB;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,4BAA4B;IAC5B,8BAA8B;IAC9B,4BAA4B;AAChC;;AAEA,yBAAyB;;AAEzB;IACI,aAAa;IACb,2BAA2B;IAC3B,8BAA8B;IAC9B,mBAAmB;IACnB,SAAS;IACT,6BAA6B;IAC7B,mDAAmD;IACnD,kBAAkB;IAClB,mBAAmB;AACvB;;AAEA;IACI,aAAa;IACb,YAAY;IACZ,cAAc;IACd,oBAAoB;IACpB,kBAAkB;IAClB,aAAa;IACb,WAAW;IACX,eAAe;IACf,eAAe;IACf,UAAU;IACV,kBAAkB;AACtB;;AAEA;IACI,aAAa;IACb,mBAAmB;AACvB;;AAEA;IACI,YAAY;IACZ,YAAY;AAChB;;AAEA;IACI,yBAAyB;IACzB,eAAe;IACf,gBAAgB;AACpB;;AAEA;IACI,+BAA+B;AACnC;;AAEA;IACI,oBAAoB;IACpB,4BAA4B;IAC5B,eAAe;IACf,mBAAmB;AACvB;;AAEA;IACI,2BAA2B;IAC3B,gBAAgB;IAChB,qBAAqB;AACzB;;AAEA;IACI,qBAAqB;AACzB;;AAEA;IACI,qBAAqB;AACzB;;AAEA;IACI,qBAAqB;IACrB,+BAA+B;AACnC;;AAEA;IACI,qBAAqB;AACzB;;AAEA,qBAAqB;;AAErB;IACI,aAAa;IACb,8BAA8B;IAC9B,sCAAsC;AAC1C;;AAEA,yBAAyB;;AAEzB;;IAEI,aAAa;IACb,sBAAsB;IACtB,2BAA2B;IAC3B,mBAAmB;IACnB,4CAA4C;IAC5C,gBAAgB;IAChB,iBAAiB;IACjB,oBAAoB;IACpB,SAAS;IACT,UAAU;AACd;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,4BAA4B;AAChC;;AAEA;IACI,6BAA6B;IAC7B,kBAAkB;AACtB;;AAEA;IACI,eAAe;IACf,iBAAiB;AACrB;;AAEA;IACI,gBAAgB;IAChB,aAAa;IACb,qBAAqB;IACrB,eAAe;IACf,6EAA6E;IAC7E,gBAAgB;AACpB;;AAEA;IACI,iBAAiB;IACjB,qBAAqB;IACrB,gBAAgB;IAChB,YAAY;AAChB;;AAEA;IACI,mBAAmB;IACnB,YAAY;IACZ,iBAAiB;IACjB,qBAAqB;AACzB;;AAEA;IACI,WAAW;IACX,YAAY;IACZ,yBAAyB;IACzB,iBAAiB;IACjB,mBAAmB;IACnB,gBAAgB;IAChB,kBAAkB;IAClB,kCAAkC;IAClC,gBAAgB;IAChB,2BAA2B;IAC3B,eAAe;AACnB;;AAEA;IACI,YAAY;AAChB;;AAEA;;IAEI,kEAAkE;IAClE,WAAW;IACX,kBAAkB;IAClB,WAAW;IACX,WAAW;IACX,oBAAoB;IACpB,0BAA0B;AAC9B;;AAEA;IACI,WAAW;IACX,gBAAgB;IAChB,4BAA4B;IAC5B,+BAA+B;AACnC;;AAEA;IACI,UAAU;IACV,2BAA2B;IAC3B,8BAA8B;AAClC;;AAEA;IACI,aAAa;AACjB;;AAEA;IACI,UAAU;IACV,wBAAwB;AAC5B;;AAEA;;IAEI,UAAU;IACV,kBAAkB;AACtB;;AAEA;IACI,UAAU;AACd;;AAEA;;IAEI,gCAAgC;IAChC,WAAW;IACX,kBAAkB;IAClB,YAAY;IACZ,UAAU;IACV,qBAAqB;IACrB,yBAAyB;IACzB,gBAAgB;AACpB;;AAEA;IACI,UAAU;IACV,2BAA2B;IAC3B,8BAA8B;AAClC;;AAEA;IACI,WAAW;IACX,4BAA4B;IAC5B,+BAA+B;AACnC;;AAEA;IACI,UAAU;IACV,WAAW;IACX,oBAAoB;AACxB;;AAEA;IACI,WAAW;IACX,WAAW;IACX,oBAAoB;AACxB;;AAEA;IACI,kBAAkB;IAClB,gBAAgB;IAChB,uBAAuB;IACvB,kBAAkB;IAClB,cAAc;IACd,qBAAqB;IACrB,eAAe;IACf,iBAAiB;IACjB,uBAAuB;IACvB,qBAAqB;IACrB,eAAe;IACf,gBAAgB;IAChB,iBAAiB;IACjB,yBAAyB;IACzB,0BAA0B;AAC9B;;AAEA;IACI,kBAAkB;IAClB,aAAa;IACb,sDAAsD;IACtD,WAAW;IACX,eAAe;IACf,gBAAgB;AACpB;;AAEA;IACI,YAAY;IACZ,cAAc;IACd,kBAAkB;IAClB,SAAS;IACT,oDAAoD;IACpD,YAAY;IACZ,UAAU;IACV,QAAQ;IACR,SAAS;IACT,4CAA4C;IAC5C,YAAY;IACZ,iBAAiB;AACrB;;AAEA;IACI,WAAW;IACX,kBAAkB;IAClB,YAAY;IACZ,OAAO;IACP,WAAW;IACX,YAAY;IACZ,uBAAuB;IACvB,+BAA+B;IAC/B,0DAA0D;IAC1D,kCAAkC;IAClC,WAAW;AACf;;AAEA;IACI,+BAA+B;IAC/B,kCAAkC;AACtC;;AAEA;IACI,6CAA6C;IAC7C,UAAU;IACV,oDAAoD;AACxD;;AAEA,4BAA4B;;AAE5B;IACI,kBAAkB;IAClB,aAAa;IACb,sBAAsB;IACtB,kBAAkB;IAClB,2BAA2B;IAC3B,mBAAmB;AACvB;;AAEA;IACI,kBAAkB;IAClB,UAAU;IACV,SAAS;IACT,kBAAkB;IAClB,gCAAgC;IAChC,YAAY;IACZ,mBAAmB;IACnB,iBAAiB;IACjB,aAAa;IACb,mBAAmB;IACnB,eAAe;AACnB;;AAEA;IACI,yBAAyB;IACzB,WAAW;IACX,aAAa;IACb,YAAY;IACZ,iBAAiB;IACjB,UAAU;IACV,WAAW;IACX,cAAc;IACd,qBAAqB;AACzB;;AAEA;IACI,aAAa;IACb,uBAAuB;IACvB,mBAAmB;IACnB,qBAAqB;IACrB,mBAAmB;IACnB,aAAa;IACb,kBAAkB;IAClB,YAAY;IACZ,aAAa;IACb,qBAAqB;AACzB;;AAEA;;IAEI,iBAAiB;IACjB,eAAe;AACnB;;AAEA;;IAEI,mBAAmB;IACnB,cAAc;AAClB;;AAEA;IACI,aAAa;IACb,2BAA2B;IAC3B,mBAAmB;IACnB,sBAAsB;AAC1B;;AAEA;IACI,kBAAkB;IAClB,gBAAgB;IAChB,yBAAyB;IACzB,YAAY;IACZ,qBAAqB;IACrB,eAAe;IACf,iBAAiB;IACjB,uBAAuB;IACvB,qBAAqB;IACrB,eAAe;IACf,gBAAgB;IAChB,iBAAiB;IACjB,yBAAyB;IACzB,0BAA0B;AAC9B;;AAEA;IACI,kBAAkB;IAClB,gBAAgB;IAChB,yBAAyB;IACzB,UAAU;IACV,qBAAqB;IACrB,eAAe;IACf,iBAAiB;IACjB,uBAAuB;IACvB,qBAAqB;IACrB,eAAe;IACf,gBAAgB;IAChB,iBAAiB;IACjB,yBAAyB;IACzB,0BAA0B;AAC9B;;AAEA;IACI,kBAAkB;IAClB,sDAAsD;IACtD,WAAW;IACX,eAAe;IACf,gBAAgB;AACpB;;AAEA;IACI,kBAAkB;IAClB,sDAAsD;IACtD,WAAW;IACX,eAAe;IACf,gBAAgB;AACpB;;AAEA;;IAEI,YAAY;IACZ,cAAc;IACd,kBAAkB;IAClB,SAAS;IACT,oDAAoD;IACpD,YAAY;IACZ,UAAU;IACV,QAAQ;IACR,SAAS;IACT,4CAA4C;IAC5C,YAAY;IACZ,iBAAiB;AACrB;;AAEA;;IAEI,WAAW;IACX,kBAAkB;IAClB,YAAY;IACZ,OAAO;IACP,WAAW;IACX,YAAY;IACZ,uBAAuB;IACvB,+BAA+B;IAC/B,0DAA0D;IAC1D,kCAAkC;IAClC,WAAW;AACf;;AAEA;;IAEI,+BAA+B;IAC/B,kCAAkC;EACpC;;AAEF;;IAEI,6CAA6C;IAC7C,UAAU;IACV,oDAAoD;AACxD;;AAEA;;;;IAII,iBAAiB;IACjB,cAAc;IACd,YAAY;IACZ,aAAa;IACb,mCAAmC;IACnC,YAAY;IACZ,4EAA4E;AAChF;;AAEA;;;;IAII,aAAa;IACb,8BAA8B;IAC9B,mBAAmB;IACnB,SAAS;AACb;;AAEA;IACI,iBAAiB;AACrB;;AAEA;;IAEI,kBAAkB;IAClB,qBAAqB;IACrB,4BAA4B;IAC5B,kBAAkB;IAClB,0CAA0C;IAC1C,sBAAsB;IACtB,cAAc;IACd,eAAe;IACf,qBAAqB;IACrB,uCAAuC;IACvC,eAAe;IACf,gBAAgB;IAChB,iBAAiB;IACjB,gBAAgB;IAChB,UAAU;IACV,kBAAkB;IAClB,kBAAkB;IAClB,kCAAkC;IAClC,oBAAoB;IACpB,iBAAiB;IACjB,yBAAyB;IACzB,0BAA0B;IAC1B,sBAAsB;AAC1B;;AAEA;;;;IAII,yBAAyB;IACzB,wBAAwB;IACxB,iBAAiB;AACrB;;AAEA;;IAEI,WAAW;AACf;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,uBAAuB;IACvB,4EAA4E;IAC5E,aAAa;IACb,gBAAgB;AACpB;;AAEA;IACI,aAAa;IACb,8BAA8B;IAC9B,qBAAqB;IACrB,wBAAwB;IACxB,oBAAoB;IACpB,kDAAkD;AACtD;;AAEA;IACI,eAAe;AACnB;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,uBAAuB;IACvB,iBAAiB;AACrB;;AAEA;IACI,aAAa;IACb,8BAA8B;IAC9B,mBAAmB;IACnB,wBAAwB;IACxB,aAAa;IACb,6BAA6B;AACjC;;AAEA;IACI,qBAAqB;AACzB;;AAEA;IACI,2BAA2B;AAC/B;;AAEA;IACI,aAAa;IACb,8BAA8B;IAC9B,mBAAmB;IACnB,SAAS;AACb;;AAEA;IACI,aAAa;IACb,2BAA2B;IAC3B,mBAAmB;IACnB,SAAS;AACb;;AAEA;IACI,gBAAgB;IAChB,sBAAsB;IACtB,SAAS;IACT,aAAa;IACb,mBAAmB;IACnB,aAAa;IACb,cAAc;IACd,iCAAiC;IACjC,qBAAqB;IACrB,+BAA+B;IAC/B,aAAa;IACb,qBAAqB;IACrB,eAAe;AACnB;;AAEA;IACI,WAAW;IACX,aAAa;IACb,cAAc;IACd,mBAAmB;IACnB,uCAAuC;IACvC,gCAAgC;IAChC,6BAA6B;IAC7B,uEAAuE;AAC3E;;AAEA;IACI,mBAAmB;AACvB;;AAEA;IACI,YAAY;IACZ,6BAA6B;AACjC;;AAEA;IACI,4CAA4C;IAC5C,gCAAgC;AACpC;;AAEA;IACI,eAAe;AACnB;;AAEA;IACI,gGAAgG;AACpG;;AAEA;IACI,eAAe;AACnB;;AAEA;IACI,8FAA8F;AAClG;;AAEA;IACI,eAAe;AACnB;;AAEA;IACI,8FAA8F;AAClG;;AAEA,uBAAuB;;AAEvB;IACI,4BAA4B;IAC5B,eAAe;IACf,gBAAgB;IAChB,kBAAkB;IAClB,aAAa;IACb,0CAA0C;AAC9C;;AAEA;IACI,qBAAqB;IACrB,YAAY;AAChB;;AAEA;IACI,qBAAqB;IACrB,YAAY;AAChB;;AAEA;IACI,qBAAqB;IACrB,gBAAgB;AACpB;;AAEA;IACI,qBAAqB;IACrB,YAAY;AAChB;;AAEA,yBAAyB;;AAEzB,qBAAqB;;AAErB;IACI,aAAa,EAAE,0BAA0B;IACzC,kBAAkB,EAAE,oDAAoD;IACxE,MAAM,EAAE,yBAAyB;IACjC,OAAO,EAAE,yBAAyB;IAClC,WAAW;IACX,YAAY;IACZ,wBAAwB;IACxB,YAAY;AAChB;;AAEA;IACI,cAAc;AAClB;;AAEA,8CAA8C;;AAE9C;;IAEI,eAAe;IACf,aAAa;IACb,sBAAsB;IACtB,mBAAmB;IACnB,0BAA0B,EAAE,oDAAoD;IAChF,YAAY;IACZ,aAAa;IACb,SAAS;IACT,UAAU,EAAE,gDAAgD;IAC5D,QAAQ,EAAE,yBAAyB;IACnC,SAAS,EAAE,yBAAyB;IACpC,aAAa;IACb,mBAAmB;IACnB,4BAA4B;IAC5B,4EAA4E;IAC5E,iBAAiB;IACjB,yCAAyC,EAAE,mBAAmB;IAC9D,6BAA6B;IAC7B,uCAAuC;AAC3C;;AAEA;GACG,wBAAwB;GACxB,eAAe;AAClB;;AAEA;;IAEI,eAAe;AACnB;;AAEA;IACI,sBAAsB;IACtB,aAAa;IACb,sBAAsB;IACtB,8BAA8B;IAC9B,SAAS;IACT,kBAAkB;AACtB;;AAEA;IACI,sBAAsB;IACtB,aAAa;IACb,sBAAsB;IACtB,8BAA8B;IAC9B,SAAS;IACT,kBAAkB;AACtB;;AAEA;IACI,iBAAiB;IACjB,cAAc;IACd,YAAY;IACZ,aAAa;IACb,mCAAmC;IACnC,WAAW;IACX,YAAY;IACZ,4EAA4E;IAC5E,4BAA4B;AAChC;;AAEA;IACI,kBAAkB;IAClB,SAAS;IACT,SAAS;IACT,qBAAqB;IACrB,4BAA4B;IAC5B,kBAAkB;IAClB,0CAA0C;IAC1C,sBAAsB;IACtB,cAAc;IACd,eAAe;IACf,qBAAqB;IACrB,sCAAsC;IACtC,eAAe;IACf,gBAAgB;IAChB,iBAAiB;IACjB,gBAAgB;IAChB,UAAU;IACV,kBAAkB;IAClB,kBAAkB;IAClB,kCAAkC;IAClC,oBAAoB;IACpB,iBAAiB;IACjB,yBAAyB;IACzB,0BAA0B;IAC1B,sBAAsB;AAC1B;;AAEA;;IAEI,yBAAyB;IACzB,wBAAwB;IACxB,iBAAiB;AACrB;;AAEA;IACI,WAAW;AACf;;AAEA,iDAAiD;;AAEjD;;IAEI,eAAe;IACf,aAAa;IACb,sBAAsB;IACtB,mBAAmB;IACnB,0BAA0B,EAAE,oDAAoD;IAChF,SAAS;IACT,aAAa;IACb,aAAa;IACb,UAAU,EAAE,gDAAgD;IAC5D,QAAQ,EAAE,yBAAyB;IACnC,SAAS,EAAE,yBAAyB;IACpC,aAAa;IACb,mBAAmB;IACnB,4BAA4B;IAC5B,4EAA4E;IAC5E,iBAAiB;IACjB,yCAAyC,EAAE,mBAAmB;IAC9D,6BAA6B;IAC7B,uCAAuC;AAC3C;;AAEA;;IAEI,eAAe;AACnB;;AAEA;;IAEI,aAAa;IACb,8BAA8B;IAC9B,qBAAqB;IACrB,4EAA4E;IAC5E,QAAQ;IACR,SAAS;IACT,aAAa;IACb,SAAS;AACb;;AAEA;;;;;;IAMI,4BAA4B;AAChC;;AAEA;;;;IAII,yCAAyC;AAC7C;;AAEA,uCAAuC;;AAEvC;;IAEI;QACI,oBAAoB;QACpB,uBAAuB;IAC3B;;IAEA;QACI,cAAc;IAClB;;IAEA;QACI,eAAe;IACnB;;IAEA;QACI,aAAa;IACjB;;IAEA;QACI,aAAa;QACb,sBAAsB;QACtB,mBAAmB;QACnB,sCAAsC;QACtC,SAAS;IACb;;IAEA;QACI,WAAW;QACX,aAAa;IACjB;;IAEA;QACI,WAAW;QACX,gBAAgB;IACpB;;IAEA;QACI,sBAAsB;IAC1B;;IAEA;QACI,OAAO;IACX;;IAEA;QACI,iBAAiB;IACrB;;IAEA;QACI,SAAS;QACT,iBAAiB;IACrB;;IAEA;;QAEI,YAAY;QACZ,aAAa;IACjB;;IAEA;;QAEI,sBAAsB;QACtB,mBAAmB;QACnB,SAAS;IACb;;AAEJ",sourcesContent:["/*-----GLOBAL DECLARATIONS-----*/\n\n*,\n*::after,\n*::before {\n    box-sizing: border-box;\n    padding: 0;\n    margin: 0;\n}\n\n@font-face {\n    font-family: 'MyLogoFont';\n    src: url('./fonts/WendyOne-Regular.ttf');\n    font-weight: 600;\n    font-style: normal;\n}\n\n@font-face {\n    font-family: 'vecteezyFont';\n    src: url('./fonts/MouseMemoirs-Regular.ttf');\n    font-style: normal;\n}\n\n@font-face {\n    font-family: 'copyrightFont';\n    src: url('./fonts/Comfortaa-VariableFont_wght.ttf');\n    font-style: normal;\n}\n\n@font-face {\n    font-family: 'SidebarHeading';\n    src: url('./fonts/FugazOne-Regular.ttf');\n    font-weight: 600;\n    font-style: normal;\n}\n\nbody {\n    display: flex;\n    flex-direction: column;\n    justify-items: space-between;\n    justify-content: space-between;\n    font-family: 'copyrightFont';\n}\n\n/*------HEADER DIV------*/\n\n.header {\n    display: flex;\n    justify-items:space-between;\n    justify-content: space-between;\n    align-items: center;\n    gap: 40px;\n    border-bottom: 1px solid gray;\n    box-shadow: rgba(0, 0, 0, 0.45) 0px 25px 20px -20px;\n    padding-left: 20px;\n    padding-right: 20px;\n}\n\n.show-project-nav {\n    display: none;\n    border: none;\n    color: inherit;\n    font-family: inherit;\n    font-size: inherit;\n    outline: none;\n    width: 60px;\n    font-size: 40px;\n    cursor: pointer;\n    padding: 0;\n    border-radius: 5px;\n}\n\n.logo-div {\n    display: flex;\n    align-items: center;\n}\n\n.logo-img {\n    width: 100px;\n    height: auto;\n}\n\n.logo-caption {\n    font-family: 'MyLogoFont';\n    font-size: 80px;\n    margin-top: 10px;\n}\n\n.logo-caption span {\n    color:rgba(75, 201, 201, 0.764);\n}\n\n.logo-copyright {\n    align-self: flex-end;\n    font-family: 'copyrightFont';\n    font-size: 20px;\n    margin-bottom: 20px;\n}\n\na[href=\"https://vecteezy.com\"] {\n    font-family: 'vecteezyFont';\n    color:darkorange;\n    text-decoration: none;\n}\n\na[href=\"https://vecteezy.com\"]:link { \n    text-decoration: none;\n}\n  \na[href=\"https://vecteezy.com\"]:visited { \n    text-decoration: none; \n}\n  \na[href=\"https://vecteezy.com\"]:hover { \n    text-decoration: none; \n    color:rgba(75, 201, 201, 0.764);\n}\n  \na[href=\"https://vecteezy.com\"]:active { \n    text-decoration: none;\n}\n\n/*-----MAIN DIV-----*/\n\n.main {\n    display: grid;\n    grid-template-columns: 2fr 5fr;\n    min-height: calc(102vh - 104px - 48px);\n}\n\n/*------Sidebar Div-----*/\n\n.sidebar,\n.sidebar.active {\n    display: flex;\n    flex-direction: column;\n    justify-content: flex-start;\n    align-items: center;\n    background-color: rgba(128, 128, 128, 0.591);\n    min-width: 250px;\n    padding-top: 20px;\n    padding-bottom: 20px;\n    gap: 40px;\n    z-index: 1;\n}\n\n.newly-created-projects {\n    display: flex;\n    flex-direction: column;\n    justify-items: space-between;\n}\n\n.newly-created-projects-heading {\n    font-family: 'SidebarHeading';\n    text-align: center;\n}\n\n.newly-created-projects-list {\n    padding: 1rem 0;\n    font-size: 1.5rem;\n}\n\n.newly-created-projects-list li {\n    list-style: none;\n    padding: 1rem;\n    transition: 0.3s ease;\n    cursor: pointer;\n    font-family: 'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS', sans-serif;\n    min-width: 200px;\n}\n\n.newly-created-projects-list li:hover {\n    background: white;\n    border-radius: 0.4rem;\n    font-weight: 500;\n    color: black;\n}\n\n.newly-created-projects-list li.active {\n    font-weight: bolder;\n    color: white;\n    background: black;\n    border-radius: 0.4rem;\n}\n  \n.icon-btn {\n    width: 50px;\n    height: 50px;\n    border: 1px solid #cdcdcd;\n    background: white;\n    border-radius: 25px;\n    overflow: hidden;\n    position: relative;\n    transition: width 0.2s ease-in-out;\n    font-weight: 500;\n    font-family: 'vecteezyFont';\n    cursor: pointer;\n}\n  \n.add-btn:hover {\n    width: 120px;\n}\n  \n.add-btn::before,\n.add-btn::after {\n    transition: width 0.2s ease-in-out, border-radius 0.2s ease-in-out;\n    content: \"\";\n    position: absolute;\n    height: 4px;\n    width: 10px;\n    top: calc(50% - 2px);\n    background-color: seagreen;\n}\n  \n.add-btn::after {\n    right: 14px;\n    overflow: hidden;\n    border-top-right-radius: 2px;\n    border-bottom-right-radius: 2px;\n}\n  \n.add-btn::before {\n    left: 14px;\n    border-top-left-radius: 2px;\n    border-bottom-left-radius: 2px;\n}\n  \n.icon-btn:focus {\n    outline: none;\n}\n  \n.btn-txt {\n    opacity: 0;\n    transition: opacity 0.2s;\n}\n  \n.add-btn:hover::before,\n.add-btn:hover::after {\n    width: 4px;\n    border-radius: 2px;\n}\n  \n.add-btn:hover .btn-txt {\n    opacity: 1;\n}\n  \n.add-icon::after,\n.add-icon::before {\n    transition: all 0.2s ease-in-out;\n    content: \"\";\n    position: absolute;\n    height: 20px;\n    width: 2px;\n    top: calc(50% - 10px);\n    background-color:seagreen;\n    overflow: hidden;\n}\n  \n.add-icon::before {\n    left: 22px;\n    border-top-left-radius: 2px;\n    border-bottom-left-radius: 2px;\n}\n  \n.add-icon::after {\n    right: 22px;\n    border-top-right-radius: 2px;\n    border-bottom-right-radius: 2px;\n}\n  \n.add-btn:hover .add-icon::before {\n    left: 15px;\n    height: 4px;\n    top: calc(50% - 2px);\n}\n  \n.add-btn:hover .add-icon::after {\n    right: 15px;\n    height: 4px;\n    top: calc(50% - 2px);\n}\n\n.delete-project-button {\n    position: relative;\n    overflow: hidden;\n    border: 1px solid white;\n    border-radius: 50%;\n    color: #18181a;\n    display: inline-block;\n    font-size: 13px;\n    line-height: 15px;\n    padding: 18px 18px 18px;\n    text-decoration: none;\n    cursor: pointer;\n    background: #fff;\n    user-select: none;\n    -webkit-user-select: none;\n    touch-action: manipulation;\n}\n\n.delete-project-button span:first-child {\n    position: relative;\n    color:crimson;\n    transition: color 600ms cubic-bezier(0.48, 0, 0.12, 1);\n    z-index: 10;\n    font-size: 25px;\n    font-weight: 800;\n}\n\n.delete-project-button span:last-child {\n    color: white;\n    display: block;\n    position: absolute;\n    bottom: 0;\n    transition: all 500ms cubic-bezier(0.48, 0, 0.12, 1);\n    z-index: 100;\n    opacity: 0;\n    top: 50%;\n    left: 50%;\n    transform: translateY(225%) translateX(-50%);\n    height: 10px;\n    line-height: 15px;\n}\n  \n.delete-project-button:after{\n    content: \"\";\n    position: absolute;\n    bottom: -50%;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    background-color: black;\n    transform-origin: bottom center;\n    transition: transform 600ms cubic-bezier(0.48, 0, 0.12, 1);\n    transform: skewY(9.3deg) scaleY(0);\n    z-index: 50;\n}\n  \n.delete-project-button:hover:after {\n    transform-origin: bottom center;\n    transform: skewY(9.3deg) scaleY(2);\n}\n  \n.delete-project-button:hover span:last-child {\n    transform: translateX(-50%) translateY(-100%);\n    opacity: 1;\n    transition: all 900ms cubic-bezier(0.48, 0, 0.12, 1);\n}\n\n/*------Tasks List Div-----*/\n\n.tasks-container {\n    position: relative;\n    display: flex;\n    flex-direction: column;\n    padding: 36px 18px;\n    justify-content: flex-start;\n    align-items: center;\n}\n\n.search-box {\n    position: absolute;\n    top: 11.2%;\n    left: 50%;\n    align-self: center;\n    transform: translate(-50%, -50%);\n    height: 60px;\n    background: #353535;\n    line-height: 40px;\n    padding: 10px;\n    border-radius: 60px;\n    cursor: pointer;\n}\n\n.search-input {\n    background-color: #353535;\n    color: #fff;\n    outline: none;\n    border: none;\n    line-height: 40px;\n    width: 0px;\n    float: left;\n    font-size: 1em;\n    transition: 0.7s ease;\n}\n\n.search-btn {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    text-decoration: none;\n    background: #353535;\n    padding: 12px;\n    border-radius: 50%;\n    float: right;\n    color:#22ffc0;\n    transition: 0.4s ease;\n}\n\n.search-box:hover > .search-input,\n.search-input:focus {\n    width: calc(18vw);\n    margin: 0px 8px;\n}\n\n.search-box:hover > .search-btn,\n.search-input:focus + .search-btn {\n    background: #22ffc0;\n    color: #101010;\n}\n\n.task-buttons {\n    display: flex;\n    justify-items: space-around;\n    align-items: center;\n    gap: calc(47vw - 50px);\n}\n\n.add-task-button {\n    position: relative;\n    overflow: hidden;\n    border: 1px solid #18181a;\n    color: green;\n    display: inline-block;\n    font-size: 15px;\n    line-height: 15px;\n    padding: 18px 18px 17px;\n    text-decoration: none;\n    cursor: pointer;\n    background: #fff;\n    user-select: none;\n    -webkit-user-select: none;\n    touch-action: manipulation;\n}\n\n.delete-completed-tasks-button {\n    position: relative;\n    overflow: hidden;\n    border: 1px solid #18181a;\n    color: red;\n    display: inline-block;\n    font-size: 10px;\n    line-height: 15px;\n    padding: 18px 18px 17px;\n    text-decoration: none;\n    cursor: pointer;\n    background: #fff;\n    user-select: none;\n    -webkit-user-select: none;\n    touch-action: manipulation;\n}\n  \n.add-task-button span:first-child {\n    position: relative;\n    transition: color 600ms cubic-bezier(0.48, 0, 0.12, 1);\n    z-index: 10;\n    font-size: 35px;\n    font-weight: 800;\n}\n\n.delete-completed-tasks-button span:first-child {\n    position: relative;\n    transition: color 600ms cubic-bezier(0.48, 0, 0.12, 1);\n    z-index: 10;\n    font-size: 25px;\n    font-weight: 800;\n}\n\n.add-task-button span:last-child,\n.delete-completed-tasks-button span:last-child {\n    color: white;\n    display: block;\n    position: absolute;\n    bottom: 0;\n    transition: all 500ms cubic-bezier(0.48, 0, 0.12, 1);\n    z-index: 100;\n    opacity: 0;\n    top: 50%;\n    left: 50%;\n    transform: translateY(225%) translateX(-50%);\n    height: 14px;\n    line-height: 13px;\n}\n  \n.add-task-button:after,\n.delete-completed-tasks-button:after  {\n    content: \"\";\n    position: absolute;\n    bottom: -50%;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    background-color: black;\n    transform-origin: bottom center;\n    transition: transform 600ms cubic-bezier(0.48, 0, 0.12, 1);\n    transform: skewY(9.3deg) scaleY(0);\n    z-index: 50;\n}\n\n.add-task-button:hover:after,\n.delete-completed-tasks-button:hover:after {\n    transform-origin: bottom center;\n    transform: skewY(9.3deg) scaleY(2);\n  }\n  \n.add-task-button:hover span:last-child,\n.delete-completed-tasks-button:hover span:last-child {\n    transform: translateX(-50%) translateY(-100%);\n    opacity: 1;\n    transition: all 900ms cubic-bezier(0.48, 0, 0.12, 1);\n}\n\n.add-task-modal-input,\n.edit-task-modal-input,\ninput[type=\"date\"],\nselect {\n    padding: 0.5rem 0;\n    margin: 1rem 0;\n    border: none;\n    outline: none;\n    border-bottom: 2px solid dodgerblue;\n    resize: none;\n    font-family:'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS', sans-serif;\n}\n\n.add-task-modal-date,\n.add-task-modal-priority,\n.edit-task-modal-date,\n.edit-task-modal-priority {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    gap: 10px;\n}\n\ntextarea::placeholder {\n    line-height: 45px;\n}\n\ninput[value='Add Task'],\ninput[value='Save'] {\n    align-self: center;\n    background:dodgerblue;\n    border: 1px solid dodgerblue;\n    border-radius: 6px;\n    box-shadow: rgba(0, 0, 0, 0.1) 1px 2px 4px;\n    box-sizing: border-box;\n    color: #FFFFFF;\n    cursor: pointer;\n    display: inline-block;\n    font-family: \"proxima nova\", sans-serif;\n    font-size: 16px;\n    font-weight: 800;\n    line-height: 16px;\n    min-height: 40px;\n    outline: 0;\n    padding: 12px 14px;\n    text-align: center;\n    text-rendering: geometricprecision;\n    text-transform: none;\n    user-select: none;\n    -webkit-user-select: none;\n    touch-action: manipulation;\n    vertical-align: middle;\n}\n\ninput[value='Add Task']:hover,\ninput[value='Add Task']:active,\ninput[value='Save']:hover,\ninput[value='Save']:active {\n    background-color: initial;\n    background-position: 0 0;\n    color: dodgerblue;\n}\n\ninput[value='Add Task']:active,\ninput[value='Save']:active {\n    opacity: .8;\n}\n\n.tasks {\n    display: flex;\n    flex-direction: column;\n    align-items: flex-start;\n    font-family:'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS', sans-serif;\n    padding: 10px;\n    margin-top: 20px;\n}\n\n.task-heading-div {\n    display: flex;\n    justify-content: space-between;\n    align-items: flex-end;\n    width: calc(60vw - 50px);\n    padding-bottom: 10px;\n    border-bottom: 3px solid rgba(75, 201, 201, 0.764);\n}\n\n.tasks-title {\n    font-size: 30px;\n}\n\n.tasks-list {\n    display: flex;\n    flex-direction: column;\n    align-items: flex-start;\n    padding-top: 10px;\n}\n\n.task-card {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    width: calc(60vw - 50px);\n    padding: 20px;\n    border-bottom: 1px solid gray;\n}\n\n.task-card:nth-child(odd) {\n    background: #dbdada84;\n}\n\n.task-card:hover {\n    background-color: #cdcdcdf4;\n}\n\n.flex-1 {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    gap: 10px;\n}\n\n.flex-2 {\n    display: flex;\n    justify-content: flex-start;\n    align-items: center;\n    gap: 10px;\n}\n\ninput[type=\"checkbox\"] {\n    appearance: none;\n    background-color: #fff;\n    margin: 0;\n    font: inherit;\n    color: currentColor;\n    width: 1.15em;\n    height: 1.15em;\n    border: 0.15em solid currentColor;\n    border-radius: 0.15em;\n    transform: translateY(-0.075em);\n    display: grid;\n    place-content: center;\n    cursor: pointer;\n}\n\ninput[type=\"checkbox\"]::before {\n    content: \"\";\n    width: 0.65em;\n    height: 0.65em;\n    transform: scale(0);\n    transition: 120ms transform ease-in-out;\n    box-shadow: inset 1em 1em purple;\n    transform-origin: bottom left;\n    clip-path: polygon(14% 44%, 0 65%, 50% 100%, 100% 16%, 80% 0%, 43% 62%);\n}\n\ninput[type=\"checkbox\"]:checked::before {\n    transform: scale(1);\n}\n\ninput[type=\"checkbox\"]:checked + label {\n    opacity: 0.3;\n    text-decoration: line-through;\n}\n\ninput[type=\"checkbox\"]:focus {\n    outline: max(2px, 0.15em) solid currentColor;\n    outline-offset: max(2px, 0.15em);\n}\n\n.fa-pen-to-square {\n    cursor: pointer;\n}\n\n.fa-pen-to-square:hover {\n    filter: invert(52%) sepia(28%) saturate(7139%) hue-rotate(191deg) brightness(99%) contrast(104%);\n}\n\n.fa-up-right-and-down-left-from-center {\n    cursor: pointer;\n}\n\n.fa-up-right-and-down-left-from-center:hover {\n    filter: invert(89%) sepia(14%) saturate(1336%) hue-rotate(60deg) brightness(99%) contrast(88%);\n}\n\n.fa-trash {\n    cursor: pointer;\n}\n\n.fa-trash:hover {\n    filter: invert(18%) sepia(89%) saturate(7337%) hue-rotate(2deg) brightness(93%) contrast(120%);\n}\n\n/*-----FOOTER DIV-----*/\n\n.footer {\n    font-family: 'copyrightFont';\n    font-size: 15px;\n    font-weight: 800;\n    text-align: center;\n    padding: 10px;\n    background-color:rgba(75, 201, 201, 0.764);\n}\n  \n.footer a:link { \n    text-decoration: none; \n    color: black;\n}\n  \n.footer a:visited { \n    text-decoration: none; \n    color: black;\n}\n  \n.footer a:hover { \n    text-decoration: none; \n    color: orangered;\n}\n  \n.footer a:active { \n    text-decoration: none; \n    color: black;\n}\n\n/*-----HIDDEN PARTS-----*/\n\n/*--Overlay Window--*/\n\n.overlay-window {\n    display: none; /*invisible when inactive*/\n    position: absolute; /*the div will be fixed even if mouse scrolled down*/\n    top: 0; /*exact place of the div*/\n    left: 0; /*exact place of the div*/\n    width: 100%;\n    height: 100%;\n    background-color:dimgray;\n    opacity: 0.8;\n}\n\n.overlay-window.active {\n    display: block;\n}\n\n/*--Add New Project or Open Task Info Modal--*/\n\n.add-project-modal,\n.task-info-modal {\n    position: fixed;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content:flex-start; /*the div will be fixed even if mouse scrolled down*/\n    width: 400px;\n    height: 400px;\n    gap: 80px;\n    z-index: 1; /*the div will be in front of the overlayWindow*/\n    top: 50%; /*exact place of the div*/\n    left: 50%; /*exact place of the div*/\n    padding: 50px;\n    border-radius: 10px;\n    background-color: whitesmoke;\n    font-family:'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS', sans-serif;\n    user-select: none;\n    transform: translate(-50%, -50%) scale(0); /*will be animated*/\n    transition: 200ms ease-in-out;\n    box-shadow: 0 0 50px rgba(0, 0, 0, 0.5);\n}\n\n.task-info-modal {\n   height: 450px !important;\n   font-size: 20px;\n}\n\n.add-project-modal-heading,\n.task-info-modal-heading {\n    font-size: 30px;\n}\n\n.add-project-modal-form{\n    align-self: flex-start;\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n    gap: 60px;\n    position: relative;\n}\n\n.task-info-modal-text {\n    align-self: flex-start;\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n    gap: 20px;\n    position: relative;\n}\n\n.add-project-modal-input {\n    padding: 0.5rem 0;\n    margin: 1rem 0;\n    border: none;\n    outline: none;\n    border-bottom: 2px solid dodgerblue;\n    width: 220%;\n    resize: none;\n    font-family:'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS', sans-serif;\n    background-color: whitesmoke;\n}\n\n.add-project-modal-form > input[type=\"submit\"] {\n    position: absolute;\n    left: 70%;\n    top: 200%;\n    background:dodgerblue;\n    border: 1px solid dodgerblue;\n    border-radius: 6px;\n    box-shadow: rgba(0, 0, 0, 0.1) 1px 2px 4px;\n    box-sizing: border-box;\n    color: #FFFFFF;\n    cursor: pointer;\n    display: inline-block;\n    font-family: \"proxima nova\",sans-serif;\n    font-size: 16px;\n    font-weight: 800;\n    line-height: 16px;\n    min-height: 40px;\n    outline: 0;\n    padding: 12px 14px;\n    text-align: center;\n    text-rendering: geometricprecision;\n    text-transform: none;\n    user-select: none;\n    -webkit-user-select: none;\n    touch-action: manipulation;\n    vertical-align: middle;\n}\n  \n.add-project-modal-form > input[type=\"submit\"]:hover,\n.add-project-modal-form > input[type=\"submit\"]:active {\n    background-color: initial;\n    background-position: 0 0;\n    color: dodgerblue;\n}\n  \n.add-project-modal-form > input[type=\"submit\"]:active {\n    opacity: .8;\n}\n\n/*--Add a new Task or Edit Existing Task Modal--*/\n\n.add-task-modal,\n.edit-task-modal {\n    position: fixed;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content:flex-start; /*the div will be fixed even if mouse scrolled down*/\n    gap: 40px;\n    width: 1000px;\n    height: 250px;\n    z-index: 1; /*the div will be in front of the overlayWindow*/\n    top: 50%; /*exact place of the div*/\n    left: 50%; /*exact place of the div*/\n    padding: 30px;\n    border-radius: 10px;\n    background-color: whitesmoke;\n    font-family:'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS', sans-serif;\n    user-select: none;\n    transform: translate(-50%, -50%) scale(0); /*will be animated*/\n    transition: 200ms ease-in-out;\n    box-shadow: 0 0 50px rgba(0, 0, 0, 0.5);\n}\n\n.add-task-modal-heading,\n.edit-task-modal-heading {\n    font-size: 30px;\n}\n\n.add-task-modal-form,\n.edit-task-modal-form {\n    display: flex;\n    justify-content: space-between;\n    align-items: flex-end;\n    font-family:'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS', sans-serif;\n    top: 20%;\n    left: 10%;\n    padding: 10px;\n    gap: 50px;\n}\n\n.add-task-modal-input,\n.edit-task-modal-input,\n.add-task-modal-date-input,\n.edit-task-modal-date-input,\n.add-task-modal-priority > select,\n.edit-task-modal-priority > select {\n    background-color: whitesmoke;\n}\n\n.add-project-modal.active,\n.add-task-modal.active,\n.edit-task-modal.active,\n.task-info-modal.active {\n    transform: translate(-50%, -50%) scale(1);\n}\n\n/*-----MOBILE OR APP DECLARATIONS-----*/\n\n@media (max-width: 650px) {\n\n    .header {\n        justify-items:center;\n        justify-content: center;\n    }\n\n    .show-project-nav {\n        display: block;\n    }\n\n    .logo-caption {\n        font-size: 40px;\n    }\n\n    .logo-copyright {\n        display: none;\n    }\n  \n    .main {\n        display: flex;\n        flex-direction: column;\n        align-items: center;\n        min-height: calc(150vh - 104px - 48px);\n        gap: 50px;\n    }\n  \n    .sidebar {\n        width: 100%;\n        display: none;\n    }\n\n    .tasks-container {\n        width: 100%;\n        margin-top: 10px;\n    }\n\n    .task-buttons {\n        gap: calc(57vw - 50px);\n    }\n\n    .search-box {\n        top:17%;\n    }\n\n    .task-heading-div {\n        width: calc(75vw);\n    }\n\n    .task-card {\n        gap: 70px;\n        width: calc(75vw);\n    }\n\n    .add-task-modal,\n    .edit-task-modal { \n        width: 300px;\n        height: 600px;\n    }\n\n    .add-task-modal-form,\n    .edit-task-modal-form {\n        flex-direction: column;\n        align-items: center;\n        gap: 20px;\n    }\n\n}"],sourceRoot:""}]);const w=u},645:e=>{"use strict";e.exports=function(e){var t=[];return t.toString=function(){return this.map((function(t){var n="",o=void 0!==t[5];return t[4]&&(n+="@supports (".concat(t[4],") {")),t[2]&&(n+="@media ".concat(t[2]," {")),o&&(n+="@layer".concat(t[5].length>0?" ".concat(t[5]):""," {")),n+=e(t),o&&(n+="}"),t[2]&&(n+="}"),t[4]&&(n+="}"),n})).join("")},t.i=function(e,n,o,a,i){"string"==typeof e&&(e=[[null,e,void 0]]);var s={};if(o)for(var r=0;r<this.length;r++){var l=this[r][0];null!=l&&(s[l]=!0)}for(var c=0;c<e.length;c++){var d=[].concat(e[c]);o&&s[d[0]]||(void 0!==i&&(void 0===d[5]||(d[1]="@layer".concat(d[5].length>0?" ".concat(d[5]):""," {").concat(d[1],"}")),d[5]=i),n&&(d[2]?(d[1]="@media ".concat(d[2]," {").concat(d[1],"}"),d[2]=n):d[2]=n),a&&(d[4]?(d[1]="@supports (".concat(d[4],") {").concat(d[1],"}"),d[4]=a):d[4]="".concat(a)),t.push(d))}},t}},667:e=>{"use strict";e.exports=function(e,t){return t||(t={}),e?(e=String(e.__esModule?e.default:e),/^['"].*['"]$/.test(e)&&(e=e.slice(1,-1)),t.hash&&(e+=t.hash),/["'() \t\n]|(%20)/.test(e)||t.needQuotes?'"'.concat(e.replace(/"/g,'\\"').replace(/\n/g,"\\n"),'"'):e):e}},537:e=>{"use strict";e.exports=function(e){var t=e[1],n=e[3];if(!n)return t;if("function"==typeof btoa){var o=btoa(unescape(encodeURIComponent(JSON.stringify(n)))),a="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(o),i="/*# ".concat(a," */"),s=n.sources.map((function(e){return"/*# sourceURL=".concat(n.sourceRoot||"").concat(e," */")}));return[t].concat(s).concat([i]).join("\n")}return[t].join("\n")}},379:e=>{"use strict";var t=[];function n(e){for(var n=-1,o=0;o<t.length;o++)if(t[o].identifier===e){n=o;break}return n}function o(e,o){for(var i={},s=[],r=0;r<e.length;r++){var l=e[r],c=o.base?l[0]+o.base:l[0],d=i[c]||0,A="".concat(c," ").concat(d);i[c]=d+1;var p=n(A),u={css:l[1],media:l[2],sourceMap:l[3],supports:l[4],layer:l[5]};if(-1!==p)t[p].references++,t[p].updater(u);else{var m=a(u,o);o.byIndex=r,t.splice(r,0,{identifier:A,updater:m,references:1})}s.push(A)}return s}function a(e,t){var n=t.domAPI(t);return n.update(e),function(t){if(t){if(t.css===e.css&&t.media===e.media&&t.sourceMap===e.sourceMap&&t.supports===e.supports&&t.layer===e.layer)return;n.update(e=t)}else n.remove()}}e.exports=function(e,a){var i=o(e=e||[],a=a||{});return function(e){e=e||[];for(var s=0;s<i.length;s++){var r=n(i[s]);t[r].references--}for(var l=o(e,a),c=0;c<i.length;c++){var d=n(i[c]);0===t[d].references&&(t[d].updater(),t.splice(d,1))}i=l}}},569:e=>{"use strict";var t={};e.exports=function(e,n){var o=function(e){if(void 0===t[e]){var n=document.querySelector(e);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(e){n=null}t[e]=n}return t[e]}(e);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(n)}},216:e=>{"use strict";e.exports=function(e){var t=document.createElement("style");return e.setAttributes(t,e.attributes),e.insert(t,e.options),t}},565:(e,t,n)=>{"use strict";e.exports=function(e){var t=n.nc;t&&e.setAttribute("nonce",t)}},795:e=>{"use strict";e.exports=function(e){var t=e.insertStyleElement(e);return{update:function(n){!function(e,t,n){var o="";n.supports&&(o+="@supports (".concat(n.supports,") {")),n.media&&(o+="@media ".concat(n.media," {"));var a=void 0!==n.layer;a&&(o+="@layer".concat(n.layer.length>0?" ".concat(n.layer):""," {")),o+=n.css,a&&(o+="}"),n.media&&(o+="}"),n.supports&&(o+="}");var i=n.sourceMap;i&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),t.styleTagTransform(o,e,t.options)}(t,e,n)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(t)}}}},589:e=>{"use strict";e.exports=function(e,t){if(t.styleSheet)t.styleSheet.cssText=e;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(e))}}},374:(e,t,n)=>{"use strict";e.exports=n.p+"4d2ab5de91c4d193a69f.ttf"},118:(e,t,n)=>{"use strict";e.exports=n.p+"b409ae0da16dcaf2d59b.ttf"},239:(e,t,n)=>{"use strict";e.exports=n.p+"7f2e3f49a17c1e291d24.ttf"},265:(e,t,n)=>{"use strict";e.exports=n.p+"63e47643d58b20318804.ttf"}},t={};function n(o){var a=t[o];if(void 0!==a)return a.exports;var i=t[o]={id:o,exports:{}};return e[o].call(i.exports,i,i.exports,n),i.exports}n.m=e,n.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return n.d(t,{a:t}),t},n.d=(e,t)=>{for(var o in t)n.o(t,o)&&!n.o(e,o)&&Object.defineProperty(e,o,{enumerable:!0,get:t[o]})},n.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),n.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},(()=>{var e;n.g.importScripts&&(e=n.g.location+"");var t=n.g.document;if(!e&&t&&(t.currentScript&&(e=t.currentScript.src),!e)){var o=t.getElementsByTagName("script");o.length&&(e=o[o.length-1].src)}if(!e)throw new Error("Automatic publicPath is not supported in this browser");e=e.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),n.p=e})(),n.b=document.baseURI||self.location.href,n.nc=void 0,(()=>{"use strict";var e={};n.r(e),n.d(e,{$:()=>B,F:()=>C});var t=n(379),o=n.n(t),a=n(795),i=n.n(a),s=n(569),r=n.n(s),l=n(565),c=n.n(l),d=n(216),A=n.n(d),p=n(589),u=n.n(p),m=n(426),f={};f.styleTagTransform=u(),f.setAttributes=c(),f.insert=r().bind(null,"head"),f.domAPI=i(),f.insertStyleElement=A(),o()(m.Z,f),m.Z&&m.Z.locals&&m.Z.locals;var g=n(176),h=n.n(g);function w(){let e=document.querySelector(".search-input").value.toUpperCase(),t=document.querySelector("[data-tasks]").querySelectorAll(".task-card");for(let n=0;n<t.length;n++)t[n].getElementsByTagName("label")[0].textContent.toUpperCase().indexOf(e)>-1?t[n].style.display="":t[n].style.display="none"}function b(e){const t=document.querySelector("[data-list-counter]"),n=e.tasks.filter((e=>!e.complete)).length,o=1===n?"task":"tasks";t.innerText=`${n} ${o} remained`}function B(){const e=document.querySelector("[data-new-list-input]");return{id:Date.now().toString(),name:e.value,tasks:[]}}function C(){const e=document.querySelector("[data-lists]");y(e),function(){const e=document.querySelector("[data-lists]");k.forEach((t=>{const n=document.createElement("li");n.innerText=t.name,n.dataset.listId=t.id,t.id===v&&n.classList.add("active"),e.appendChild(n)}))}();const t=document.querySelector("[data-list-display-container]"),n=k.find((e=>e.id===v)),o=document.querySelector("[data-tasks]"),a=document.querySelector("[data-list-title]"),i=document.querySelector("[data-list-counter]");e.hasChildNodes()?void 0===n?(t.style.display="",o.style.display="none",a.innerText="Please choose a project",i.innerText=""):(t.style.display="",a.innerHTML=`<i class="fas fa-tasks"></i> ${n.name}`,o.style.display="",b(n),y(o),function(e){const t=document.querySelector("[data-tasks]");e.tasks.forEach((e=>{const n=k.find((e=>e.id===v)),o=document.getElementById("task-card-template"),a=document.importNode(o.content,!0),i=a.querySelector("input");i.id=e.id,i.checked=e.complete;const s=a.querySelector("label");s.htmlFor=e.id;const r=document.createElement("br");s.append(e.name,r,e.date);const l=e.id,c=document.createElement("p");c.innerHTML='<i class="fa-solid fa-pen-to-square" aria-hidden="true"></i>',c.addEventListener("click",(()=>function(e,t){const n=document.getElementById("edit-task-modal"),o=document.getElementById("overlay-window"),a=document.querySelector("[data-edit-task-form]"),i=document.querySelector("[data-input-task-name]"),s=document.querySelector("[data-input-detail-name]"),r=document.querySelector("[data-input-due-date]"),l=document.querySelector("[data-input-priority]");i.value=e.name,r.value=e.date,l.value=e.priority,s.value=e.description,o.classList.add("active"),n.classList.add("active");let c=document.getElementById(e.id).nextSibling.nextSibling;const d=k.find((e=>e.id===v)),A=d.tasks.find((e=>e.id===t));a.addEventListener("submit",(e=>{e.preventDefault();const t=i.value,n=t.toLowerCase();A.name.toLowerCase()===n||d.tasks.find((e=>e.name.toLowerCase()===n))?h().fire({icon:"error",title:"Oops...",text:`${t} is already among your project's tasks`,footer:"Hint: Task names should be different!"}):(A.name=i.value,A.date=r.value,A.priority=l.value,A.description=s.value,c.innerHTML=`<span class="task-card-text"></span>${A.name}<br>${A.date}`,q(),E()),location.reload()}))}(e,l)));const d=document.createElement("p");d.innerHTML='<i class="fa-solid fa-up-right-and-down-left-from-center"></i>',d.addEventListener("click",(()=>function(e,t){!function(){const e=document.getElementById("task-info-modal");document.getElementById("overlay-window").classList.add("active"),e.classList.add("active")}();const n=document.querySelector("[data-task-card-name]"),o=document.querySelector("[data-task-card-description]"),a=document.querySelector("[data-task-card-due-date]"),i=document.querySelector("[data-task-card-priority]"),s=document.querySelector("[data-task-card-project-name]");n.textContent=`Name: ${e.name}`,o.textContent=`Detail: ${e.description}`,a.textContent=`Due Date: ${e.date}`,i.textContent=`Priority: ${e.priority}`,s.textContent=`Project Name: ${t.name}`}(e,n)));const A=e.name,p=document.createElement("p");p.innerHTML='<i class="fa-solid fa-trash"></i>',p.addEventListener("click",(()=>function(e,t){h().fire({title:"Are you sure?",text:"You won't be able to revert this!",icon:"warning",showCancelButton:!0,confirmButtonColor:"#3085d6",cancelButtonColor:"#d33",confirmButtonText:"Yes, delete it!"}).then((n=>{n.isConfirmed&&(h().fire("Deleted!","Your task has been deleted.","success"),t.tasks=t.tasks.filter((t=>t.name!==e)),e=null,E())}))}(A,n)));const u=a.querySelector(".flex-2");u.append(c),u.append(d),u.append(p),t.appendChild(a)}))}(n),function(e){const t=[...document.querySelectorAll(".task-card")],n=[...document.querySelectorAll(".task-card-check-box")];for(let o=0;o<t.length;o++)for(let o=0;o<e.tasks.length;o++)"high"===e.tasks[o].priority?(t[o].style.borderLeft="6px solid red",n[o].style.border="0.15em solid red"):"moderate"===e.tasks[o].priority?(t[o].style.borderLeft="6px solid gold",n[o].style.border="0.15em solid gold"):(t[o].style.borderLeft="6px solid #7cfc00",n[o].style.border="0.15em solid #7cfc00")}(n)):(t.style.display="",o.style.display="none",a.innerText="Please create a project",i.innerText="")}function y(e){for(;e.firstChild;)e.removeChild(e.firstChild)}const x="task.lists",I="task.selectedListId";let k=JSON.parse(localStorage.getItem(x))||[],v=localStorage.getItem(I);function E(){localStorage.setItem(x,JSON.stringify(k)),localStorage.setItem(I,JSON.stringify(v)),C()}function S(){const e=document.getElementById("add-project-modal"),t=document.getElementById("overlay-window");document.querySelector("[data-new-list-form]").reset(),t.classList.add("active"),e.classList.add("active")}function j(){const e=document.getElementById("add-project-modal"),t=document.getElementById("overlay-window"),n=document.querySelector("[data-new-list-input]");t.classList.remove("active"),e.classList.remove("active"),n.value=null}function T(){const e=document.getElementById("add-task-modal"),t=document.getElementById("overlay-window");document.querySelector("[data-new-task-form]").reset(),t.classList.add("active"),e.classList.add("active")}function z(){const e=document.getElementById("add-task-modal");document.getElementById("overlay-window").classList.remove("active"),e.classList.remove("active");const t=document.querySelector("[data-new-task-name-input]"),n=document.querySelector("[data-new-task-detail-input]"),o=document.querySelector("[data-new-task-date-input]"),a=document.querySelector("[data-new-task-priority-input]");t.value=null,n.value=null,o.value=null,a.value=null}function q(){const e=document.getElementById("edit-task-modal");document.getElementById("overlay-window").classList.remove("active"),e.classList.remove("active")}function L(){const e=document.getElementById("add-task-modal"),t=document.getElementById("edit-task-modal"),n=document.getElementById("task-info-modal");j(),e&&z(),t&&q(),n&&function(){const e=document.getElementById("task-info-modal");document.getElementById("overlay-window").classList.remove("active"),e.classList.remove("active")}()}function P(e){"Escape"===e.key&&L()}document.addEventListener("DOMContentLoaded",(function(){const e=document.getElementById("add-project-button"),t=document.querySelector("[data-new-list-form]"),n=document.getElementById("delete-project-button"),o=document.querySelector("[data-lists]"),a=document.getElementById("add-task-button"),i=document.querySelector(".search-input"),s=document.querySelector("[data-new-task-form]"),r=document.querySelector("[data-delete-completed-tasks-btn]"),l=document.querySelector("[data-list-display-container]"),c=document.getElementById("overlay-window"),d=document.getElementById("show-projects-nav"),A=document.querySelector("[data-new-list-input]");e.addEventListener("click",S),t.addEventListener("submit",(e=>{e.preventDefault();const t=A.value,n=t.toLowerCase();if(k.find((e=>e.name.toLowerCase()===n)))h().fire({icon:"error",title:"Oops...",text:`${t} is already in your projects box`,footer:"Hint: Project names should be different!"});else{const e=B();h().fire({position:"top-end",icon:"success",title:"Your project has been added",showConfirmButton:!1,timer:1500}),j(),k.push(e),E()}})),n.addEventListener("click",(()=>{void 0===k.find((e=>e.id===v))?h().fire({icon:"error",title:"Oops...",text:"Please choose a project!",footer:"Hint: My Projects"}):h().fire({title:"Are you sure?",text:"Your project will be COMPLETELY deleted!",icon:"warning",showCancelButton:!0,confirmButtonColor:"#d33",cancelButtonColor:"#3085d6",confirmButtonText:"Yes, delete it!",cancelButtonText:"No, cancel!",reverseButtons:!0}).then((e=>{e.isConfirmed?(h().fire("Deleted!","Your project has been deleted.","success"),k=k.filter((e=>e.id!==v)),v=null,E()):e.dismiss===h().DismissReason.cancel&&h().fire("Cancelled","Your project is safe :)","error")}))})),o.addEventListener("click",(e=>{"li"===e.target.tagName.toLowerCase()&&(v=e.target.dataset.listId,E())})),a.addEventListener("click",T),s.addEventListener("submit",(e=>{e.preventDefault();const t=k.find((e=>e.id===v));if(void 0===t)h().fire({icon:"error",title:"Oops...",text:"Please choose a project!",footer:"Hint: My Projects"});else{const e=document.querySelector("[data-new-task-name-input]").value,n=e.toLowerCase();if(t.tasks.find((e=>e.name.toLowerCase()===n)))h().fire({icon:"error",title:"Oops...",text:`${e} is already among your project's tasks`,footer:"Hint: Task names should be different!"});else{const e=function(){const e=document.querySelector("[data-new-task-name-input]"),t=document.querySelector("[data-new-task-detail-input]"),n=document.querySelector("[data-new-task-date-input]"),o=document.querySelector("[data-new-task-priority-input]");return{id:Date.now().toString(),name:e.value,date:n.value,priority:o.value,description:t.value,complete:!1}}();h().fire({position:"top-end",icon:"success",title:"Your task has been added",showConfirmButton:!1,timer:1500}),z(),t.tasks.push(e),E()}}})),r.addEventListener("click",(()=>{const e=k.find((e=>e.id===v)),t=[...document.querySelectorAll(".task-card")];if(void 0===e)h().fire({icon:"error",title:"Oops...",text:"Please choose a project!",footer:"Hint: My Projects"});else if(0===e.tasks.length)h().fire({icon:"error",title:"Oops...",text:"You do not have any tasks to be completed, yet!",footer:"Hint: Add Task Button"});else for(let n=0;n<t.length;n++)for(let t=0;t<e.tasks.length;t++)!1===e.tasks[t].complete?h().fire({icon:"error",title:"Oops...",text:"You have not completed any tasks, yet!",footer:"Hint: Task's checkbox should be checked to be completed"}):h().fire({title:"Are you sure?",text:"Your tasks will be COMPLETELY deleted!",icon:"warning",showCancelButton:!0,confirmButtonColor:"#d33",cancelButtonColor:"#3085d6",confirmButtonText:"Yes, delete it!",cancelButtonText:"No, cancel!",reverseButtons:!0}).then((e=>{if(e.isConfirmed){h().fire("Deleted!","Your tasks have been deleted.","success");const e=k.find((e=>e.id===v));e.tasks=e.tasks.filter((e=>!e.complete)),E()}else e.dismiss===h().DismissReason.cancel&&h().fire("Cancelled","Your tasks are safe :)","error")}))})),l.addEventListener("click",(e=>{if("input"===e.target.tagName.toLowerCase()){const t=k.find((e=>e.id==v));t.tasks.find((t=>t.id===e.target.id)).complete=e.target.checked,E(),b(t)}})),i.addEventListener("keyup",w),c.addEventListener("click",L),d.addEventListener("click",(()=>{document.getElementById("sidebar").classList.toggle("active")})),document.addEventListener("keydown",P)})),document.addEventListener("DOMContentLoaded",E),document.addEventListener("DOMContentLoaded",e.openFirstProject)})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,